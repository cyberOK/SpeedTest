<Page 
    x:Class="SpeedTestIPerf.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SpeedTestIPerf"
    xmlns:vm="using:SpeedTestIPerf.ViewModel" 
    xmlns:arcControl="using:SpeedTestIPerf.ArcControl"
    xmlns:converter="using:SpeedTestIPerf.ViewModel.Converters"
    xmlns:speedDate="using:SpeedTestIPerf.ViewModel.Helpers"
    xmlns:trigger="using:SpeedTestIPerf.Triggers.DeviceFamilyStateTrigger"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"   
    xmlns:Ad="using:Microsoft.Advertising.WinRT.UI" 
    xmlns:Behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:resources="using:Windows.ApplicationModel.Resources"
    mc:Ignorable="d">

    <Page.DataContext>
        <StaticResource ResourceKey="mainViewModel"/>
    </Page.DataContext>
    
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/MainPageStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="Styles/LightTheme" x:Key="Light"/>
                <ResourceDictionary Source="Styles/DarkTheme" x:Key="Dark"/>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding MainPageLoadedCommand}"/>
        </Core:EventTriggerBehavior>
        <Core:EventTriggerBehavior EventName="Unloaded">
            <Core:InvokeCommandAction Command="{Binding MainPageUnloadedCommand}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>

    <Grid RequestedTheme="{Binding SettingsPanel.Settings.Theme, Source={StaticResource mainViewModel}}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="StateGroup">
                <!-- Desktop version -->
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1040" MinWindowHeight="850"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Advertisement -->
                        <Setter Target="Advertisement.(Width)" Value="728"/>
                        <Setter Target="Advertisement.(Height)" Value="90"/>
                        <Setter Target="Advertisement.(HorizontalAlignment)" Value="Center"/>
                        <!-- Backgrounds Setting -->
                        <Setter Target="MainOpacityBackgroundGrid.(Visibility)" Value="Visible"/>
                        <Setter Target="MiddleStateBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <Setter Target="PhoneBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Collapsed"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="36"/>
                        <Setter Target="historyButton.(FontSize)" Value="36"/>
                        <Setter Target="backButton.(FontSize)" Value="36"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="150,0,150,0"/>
                        <Setter Target="StartArc.(Radius)" Value="170"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="210"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="190"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="200"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="180"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="20"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="120"/>
                        <Setter Target="StartButton.(Width)" Value="200"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="StartButton.(FontSize)" Value="70"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="40"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="1040"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="3"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,10,0,20"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="500"/>
                        <Setter Target="providerName.(Width)" Value="250"/>
                        <Setter Target="providerName.(Height)" Value="50"/>
                        <Setter Target="providerName.(FontSize)" Value="28"/>
                        <Setter Target="ipAdress.(Width)" Value="250"/>
                        <Setter Target="ipAdress.(Height)" Value="50"/>
                        <Setter Target="ipAdress.(FontSize)" Value="28"/>
                        <Setter Target="serverName.(Width)" Value="250"/>
                        <Setter Target="serverName.(Height)" Value="50"/>
                        <Setter Target="serverName.(FontSize)" Value="28"/>
                        <Setter Target="serverLocation.(Width)" Value="250"/>
                        <Setter Target="serverLocation.(Height)" Value="50"/>
                        <Setter Target="serverLocation.(FontSize)" Value="28"/>
                        <Setter Target="changeServerButton.(Width)" Value="250"/>
                        <Setter Target="changeServerButton.(Height)" Value="50"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="28"/>
                        <!-- Data Board -->
                        <Setter Target="UploadSpeedFieldsGrid.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(RelativePanel.RightOf)" Value="PingFieldsGrid"/>
                        <Setter Target="TestDataBoard.(Width)" Value="1040"/>
                        <Setter Target="TestDataBoard.(Height)" Value="150"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="280"/>
                        <Setter Target="PingText.(FontSize)" Value="40"/>
                        <Setter Target="msText.(FontSize)" Value="40"/>
                        <Setter Target="DataPingText.(FontSize)" Value="80"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="410"/>
                        <Setter Target="DownloadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="80"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="350"/>
                        <Setter Target="UploadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="40"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="80"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="SettingsPanel.(Height)" Value="850"/>
                        <Setter Target="SettingsPanel.(Width)" Value="450"/>
                        <Setter Target="SettingsPanel.(HorizontalAlignment)" Value="Right"/>
                        <Setter Target="SettingsPanel.(VerticalAlignment)" Value="Top"/>
                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Height)" Value="700"/>
                        <Setter Target="HistoryPanel.(Width)" Value="700"/>
                        <Setter Target="HistoryPanelTopBar.(Width)" Value="700"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="HistoryHeader.(Height)" Value="70"/>
                        <Setter Target="HistoryHeader.(Width)" Value="700"/>
                        <Setter Target="HistoryHeader.(Margin)" Value="0,0,0,10"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="550"/>
                        <Setter Target="ServerPanel.(Width)" Value="500"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="450"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="30"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="25"/>
                    </VisualState.Setters>
                </VisualState>
                <!-- 500 X 500 version -->
                <VisualState x:Name="Middle">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" MinWindowHeight="560"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Advertisement -->
                        <Setter Target="Advertisement.(Width)" Value="300"/>
                        <Setter Target="Advertisement.(Height)" Value="60"/>
                        <Setter Target="Advertisement.(HorizontalAlignment)" Value="Center"/>
                        <!-- Main Background -->
                        <Setter Target="BackgroundPhoto.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MainOpacityBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MiddleStateBackgroundGrid.(Visibility)" Value="Visible"/>
                        <Setter Target="PhoneBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Collapsed"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,40,10,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="25"/>
                        <Setter Target="historyButton.(FontSize)" Value="25"/>
                        <Setter Target="backButton.(FontSize)" Value="25"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,0,50,0"/>
                        <Setter Target="StartArc.(Radius)" Value="140"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="154"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="138"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="146"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="130"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="16"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="16"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="16"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="16"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="90"/>
                        <Setter Target="StartButton.(Width)" Value="150"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="StartButton.(FontSize)" Value="50"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="25"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="470"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="3"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,10"/>
                        <!-- Data Board -->
                        <Setter Target="UploadSpeedFieldsGrid.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(RelativePanel.RightOf)" Value="PingFieldsGrid"/>
                        <Setter Target="TestDataBoard.(Width)" Value="470"/>
                        <Setter Target="TestDataBoard.(Height)" Value="70"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="120"/>
                        <Setter Target="PingText.(FontSize)" Value="18"/>
                        <Setter Target="msText.(FontSize)" Value="18"/>
                        <Setter Target="DataPingText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="190"/>
                        <Setter Target="DownloadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsText.(FontSize)" Value="18"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="40"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="160"/>
                        <Setter Target="UploadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="18"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="40"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,0"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="300"/>
                        <Setter Target="providerName.(Width)" Value="150"/>
                        <Setter Target="providerName.(Height)" Value="30"/>
                        <Setter Target="providerName.(FontSize)" Value="16"/>
                        <Setter Target="ipAdress.(Width)" Value="150"/>
                        <Setter Target="ipAdress.(Height)" Value="30"/>
                        <Setter Target="ipAdress.(FontSize)" Value="16"/>
                        <Setter Target="serverName.(Width)" Value="150"/>
                        <Setter Target="serverName.(Height)" Value="30"/>
                        <Setter Target="serverName.(FontSize)" Value="16"/>
                        <Setter Target="serverLocation.(Width)" Value="150"/>
                        <Setter Target="serverLocation.(Height)" Value="30"/>
                        <Setter Target="serverLocation.(FontSize)" Value="16"/>
                        <Setter Target="changeServerButton.(Width)" Value="150"/>
                        <Setter Target="changeServerButton.(Height)" Value="35"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="16"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Height)" Value="475"/>
                        <Setter Target="SettingsPanel.(Margin)" Value="0,30,25,0"/>
                        <Setter Target="SettingsPanel.(Width)" Value="450"/>
                        <Setter Target="SettingsPanel.(HorizontalAlignment)" Value="Right"/>
                        <Setter Target="SettingsPanel.(VerticalAlignment)" Value="Top"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="475"/>
                        <Setter Target="ServerPanel.(Width)" Value="425"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="375"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>
                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Height)" Value="480"/>
                        <Setter Target="HistoryPanel.(Width)" Value="480"/>
                        <Setter Target="HistoryPanelTopBar.(Width)" Value="480"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="HistoryHeader.(Height)" Value="70"/>
                        <Setter Target="HistoryHeader.(Width)" Value="480"/>
                        <Setter Target="HistoryHeader.(Margin)" Value="0,0,0,10"/>

                    </VisualState.Setters>
                </VisualState>
                <!-- Phone version -->
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Advertisement -->
                        <Setter Target="Advertisement.(Height)" Value="80"/>
                        <!--<Setter Target="Advertisement.(HorizontalAlignment)" Value="Stretch"/>-->
                        <!-- Main Background -->
                        <Setter Target="BackgroundPhoto.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MainOpacityBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MiddleStateBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <Setter Target="PhoneBackgroundGrid.(Visibility)" Value="Visible"/>
                        <Setter Target="PopupGrid.(Background)" Value="Transparent"/>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Collapsed"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,0,50,0"/>
                        <Setter Target="StartArc.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="115"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="105"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="110"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="10"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="90"/>
                        <Setter Target="StartButton.(Width)" Value="150"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="StartButton.(FontSize)" Value="40"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="25"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- Data Board -->
                        <Setter Target="UploadSpeedFieldsGrid.(Margin)" Value="0,0,0,0"/>
                        <Setter Target="UploadSpeedFieldsGrid.(MinWidth)" Value="130"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(MinWidth)" Value="135"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(HorizontalAlignment)" Value="Center"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(RelativePanel.RightOf)" Value="PingFieldsGrid"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(RelativePanel.LeftOf)" Value="UploadSpeedFieldsGrid"/>
                        <Setter Target="UploadSpeedFieldsGrid.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="TestDataBoard.(Margin)" Value="20,0,20,0"/>
                        <Setter Target="PingText.(FontSize)" Value="15"/>
                        <Setter Target="msText.(FontSize)" Value="15"/>
                        <Setter Target="DataPingText.(FontSize)" Value="30"/>
                        <Setter Target="DownloadText.(FontSize)" Value="15"/>
                        <Setter Target="mbpsText.(FontSize)" Value="15"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="30"/>
                        <Setter Target="UploadText.(FontSize)" Value="15"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="15"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="30"/>
                        <Setter Target="ViewBox1.(MaxWidth)" Value="100"/>
                        <Setter Target="ViewBox2.(MaxWidth)" Value="100"/>
                        <Setter Target="ViewBox3.(MaxWidth)" Value="100"/>
                        <Setter Target="ViewBox1.(MaxHeight)" Value="50"/>
                        <Setter Target="ViewBox2.(MaxHeight)" Value="50"/>
                        <Setter Target="ViewBox3.(MaxHeight)" Value="50"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Margin)" Value="20,10,20,10"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,0"/>
                        <Setter Target="MainBottomBoardInformation.(Margin)" Value="20,0"/>
                        <Setter Target="providerName.(FontSize)" Value="20"/>
                        <Setter Target="serverName.(FontSize)" Value="20"/>
                        <Setter Target="serverLocation.(FontSize)" Value="20"/>
                        <Setter Target="ipAdress.(FontSize)" Value="20"/>
                        <Setter Target="changeServerButton.(Margin)" Value="0,10,0,5"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="18"/>
                        <Setter Target="changeServerButton.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="changeServerButton.(HorizontalAlignment)" Value="Stretch"/>
                        <!-- SettingsPanel -->

                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Margin)" Value="0,0,0,80"/>
                        <Setter Target="HistoryHeader.(Visibility)" Value="Collapsed"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <!-- Servers Panel -->
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>
                    </VisualState.Setters>
                </VisualState>
                <!-- Xbox version -->
                <VisualState x:Name="Xbox">
                    <VisualState.StateTriggers>
                        <trigger:DeviceFamilyStateTrigger TargetDeviceFamily="Xbox"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Advertisement -->
                        <Setter Target="Advertisement.(Width)" Value="480"/>
                        <Setter Target="Advertisement.(Height)" Value="80"/>
                        <Setter Target="Advertisement.(Margin)" Value="0,0,0,50"/>
                        <!-- Backgrounds Setting -->
                        <Setter Target="BackgroundPhoto.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MainOpacityBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <Setter Target="MiddleStateBackgroundGrid.(Visibility)" Value="Visible"/>
                        <Setter Target="PhoneBackgroundGrid.(Visibility)" Value="Collapsed"/>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Collapsed"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,40,50,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="20"/>
                        <Setter Target="historyButton.(FontSize)" Value="20"/>
                        <Setter Target="backButton.(FontSize)" Value="20"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,0,50,0"/>
                        <Setter Target="StartArc.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="115"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="105"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="110"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="10"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="120"/>
                        <Setter Target="StartButton.(Width)" Value="200"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="StartButton.(FontSize)" Value="40"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,20"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="500"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="3"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,10"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,0"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="300"/>
                        <Setter Target="providerName.(Width)" Value="150"/>
                        <Setter Target="providerName.(Height)" Value="30"/>
                        <Setter Target="providerName.(FontSize)" Value="16"/>
                        <Setter Target="ipAdress.(Width)" Value="150"/>
                        <Setter Target="ipAdress.(Height)" Value="30"/>
                        <Setter Target="ipAdress.(FontSize)" Value="16"/>
                        <Setter Target="serverName.(Width)" Value="150"/>
                        <Setter Target="serverName.(Height)" Value="30"/>
                        <Setter Target="serverName.(FontSize)" Value="16"/>
                        <Setter Target="serverLocation.(Width)" Value="150"/>
                        <Setter Target="serverLocation.(Height)" Value="30"/>
                        <Setter Target="serverLocation.(FontSize)" Value="16"/>
                        <Setter Target="changeServerButton.(Width)" Value="150"/>
                        <Setter Target="changeServerButton.(Height)" Value="35"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="16"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Height)" Value="475"/>
                        <Setter Target="SettingsPanel.(Margin)" Value="0,40,50,0"/>
                        <Setter Target="SettingsPanel.(Width)" Value="450"/>
                        <Setter Target="SettingsPanel.(HorizontalAlignment)" Value="Right"/>
                        <Setter Target="SettingsPanel.(VerticalAlignment)" Value="Top"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="475"/>
                        <Setter Target="ServerPanel.(Width)" Value="425"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="375"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>
                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Height)" Value="480"/>
                        <Setter Target="HistoryPanel.(Width)" Value="480"/>
                        <Setter Target="HistoryPanelTopBar.(Width)" Value="480"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="HistoryHeader.(Height)" Value="70"/>
                        <Setter Target="HistoryHeader.(Width)" Value="480"/>
                        <Setter Target="HistoryHeader.(Margin)" Value="0,0,0,10"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Background Image with Grid Above It -->
        <Image x:Name="BackgroundPhoto" Source="Assets/white-abstract-style-background-vector.jpg" Stretch="Fill"/>
        <!-- Desktop Background -->
        <Grid x:Name="MainOpacityBackgroundGrid" 
              RequestedTheme="{Binding SettingsPanel.Settings.Theme, Source={StaticResource mainViewModel}}"
              Background="{ThemeResource BackgroundOpacityBrushForPhoto}" />
        <!-- MiddleState(500 x 500) Background -->
        <Grid x:Name="MiddleStateBackgroundGrid" 
              RequestedTheme="{Binding SettingsPanel.Settings.Theme, Source={StaticResource mainViewModel}}"
              Background="{ThemeResource SystemControlAcrylicWindowBrush}" />
        <!-- Phone Background -->
        <Grid x:Name="PhoneBackgroundGrid" 
              RequestedTheme="{Binding SettingsPanel.Settings.Theme, Source={StaticResource mainViewModel}}"
              Background="{ThemeResource BackgroundPhone}" />

        <!-- Main Grid -->
        <Grid x:Name="MainGrid">
            <RelativePanel>

                <Ad:AdControl x:Name="Advertisement" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                          ApplicationId="3f83fe91-d6be-434d-a0ae-7351c5a997f1"
 		                  AdUnitId="test"/>
            
            <!-- Main Panel Buttons -->
                <StackPanel x:Name="SettingsPanelButtons" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignTopWithPanel="True">
                    <Button x:Name="setingsButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE713;" Margin="10"
                        Command="{Binding SettingsButtonPressed, Source={StaticResource mainViewModel}}"/>
                    <Button x:Name="historyButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE81C;" Margin="10"
                        Command="{Binding HistoryButtonPressed, Source={StaticResource mainViewModel}}"/>
                    <Button x:Name="backButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE72D;" Margin="10"
                        Command="{Binding BackButtonPressed, Source={StaticResource mainViewModel}}"/>
                </StackPanel>

                <!-- Phone Gamburger Button (Settings inner) -->
                <Button x:Name="GamburgerButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE700;" Margin="10,30" FontSize="20" 
                    RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                    Command="{Binding GamburgerButtonPressed, Source={StaticResource mainViewModel}}"/>

                <!-- Arc Board -->
                <Grid x:Name="ArcGrid" 
                      RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Above="BottomBoard" RelativePanel.AlignTopWithPanel="True">
                
                <!-- Arc Controls -->
                    <arcControl:Arc x:Name="StartArc" Fill="DarkCyan" Thickness="3" PercentValue="400" EnableGradient="False" 
                                Visibility="{Binding ArcBoard.IsStartArcVisible, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource mainViewModel}}"/>
                    <arcControl:Arc x:Name="TryConnectArc1" Fill="Gray" PercentValue="400" Opacity="0.4" EnableGradient="False" 
                                Visibility="{Binding ArcBoard.IsSpeedMeterBackgroundVisible, Source={StaticResource mainViewModel}}"/>
                    <arcControl:Arc x:Name="TryConnectArc2" Fill="Gray" PercentValue="400" Opacity="0.2" EnableGradient="False"
                                Visibility="{Binding ArcBoard.IsSpeedMeterBackgroundVisible, Source={StaticResource mainViewModel}}"/>
                    <arcControl:ArcWithGradient x:Name="DownloadSpeedArc" Fill="DarkCyan" EnableGradient="True" FirstGradientColor="WhiteSmoke"
                                Visibility="{Binding ArcBoard.IsDownloadSpeedDataRecieved, Source={StaticResource mainViewModel}}"
                                PercentValue="{Binding ArcBoard.DownloadSpeedArcValue,Source={StaticResource mainViewModel}}">
                    </arcControl:ArcWithGradient>
                   
                    <arcControl:ArcWithGradient x:Name="UploadSpeedArc" Fill="DarkBlue" EnableGradient="True"  FirstGradientColor="PowderBlue"
                                Visibility="{Binding ArcBoard.IsUploadSpeedDataRecieved, Source={StaticResource mainViewModel}}"
                                PercentValue="{Binding ArcBoard.UploadSpeedArcValue,Source={StaticResource mainViewModel}}"/>

                    <!-- Start Button and SpeedDataNumbersTextBlock and TryConnectTextBlock-->
                    <Button x:Name="StartButton" x:Uid="StartButton" Style="{StaticResource ButtonStyle}" Canvas.ZIndex="1" Content="Start" HorizontalAlignment="Center" 
                            Visibility="{Binding ArcBoard.IsStartButtonPressed, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Reverse, Source={StaticResource mainViewModel}}"
                            Command="{Binding StartButtonPressed, Source={StaticResource mainViewModel}}"/>

                    <TextBlock x:Name="TryConnectTextBlock" x:Uid="TryConnectTextBlock" Text="Connecting..." HorizontalAlignment="Center" VerticalAlignment="Center"
                               Visibility="{Binding ArcBoard.IsTryConnect, Source={StaticResource mainViewModel}}"  />

                    <TextBlock x:Name="SpeedDataNumbersTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Visibility="{Binding ArcBoard.IsSpeedDataNumbersReceiving, Source={StaticResource mainViewModel}}"              
                               Text="{Binding ArcBoard.SpeedDataNumbers, Source={StaticResource mainViewModel}}"/>

                </Grid>

                <!-- Bottom Board -->
                <StackPanel x:Name="BottomBoard" VerticalAlignment="Bottom" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.Above="Advertisement">

                    <!-- Data Board -->
                    <Grid x:Name="TestDataBoard" HorizontalAlignment="Stretch" >
                        <RelativePanel>

                            <!-- Ping Fields -->
                            <Grid x:Name="PingFieldsGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                                 Opacity="{Binding DataBoard.IsPingFieldsGridVisible, Converter={StaticResource BooleanToOpacityConverter},Source={StaticResource mainViewModel}}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="PingText" x:Uid="PingText" Grid.Column="0" Text="Ping" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                                <TextBlock x:Name="msText" x:Uid="msText" Grid.Column="0" Grid.Row="1" Text="(ms)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" />
                                <Viewbox x:Name="ViewBox1" Grid.Column="1" Grid.RowSpan="2" >
                                    <TextBlock x:Name="DataPingText"  Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Text="{Binding DataBoard.PingData, Source={StaticResource mainViewModel}}"/>
                                </Viewbox>
                            </Grid>

                            <!-- Download Speed Fields -->
                            <Grid x:Name="DownloadSpeedFieldsGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True" 
                                  Opacity="{Binding DataBoard.IsDownloadSpeedFieldsGridVisible, Converter={StaticResource BooleanToOpacityConverter},Source={StaticResource mainViewModel}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="DownloadText" x:Uid="DownloadText" Grid.Column="0" Text="Download" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                                <TextBlock x:Name="mbpsText" x:Uid="mbpsText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                <Viewbox  x:Name="ViewBox2" Grid.Column="1" Grid.RowSpan="2">
                                    <TextBlock x:Name="DownloadSpeedData" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" 
                                       Text="{Binding DataBoard.DownloadSpeedData, Source={StaticResource mainViewModel}}" />
                                </Viewbox>
                            </Grid>

                            <!-- Upload Speed Fields -->
                            <Grid x:Name="UploadSpeedFieldsGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True"
                              Opacity="{Binding DataBoard.IsUploadSpeedFieldsGridVisible, Converter={StaticResource BooleanToOpacityConverter},Source={StaticResource mainViewModel}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <TextBlock x:Name="UploadText" x:Uid="UploadText" Grid.Column="0" Text="Upload" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                                <TextBlock x:Name="mbpsUploadText"  x:Uid="mbpsUploadText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" />
                                <Viewbox  x:Name="ViewBox3" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right">
                                    <TextBlock x:Name="UploadDataText"  Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Right"
                                           Text="{Binding DataBoard.UploadSpeedData, Source={StaticResource mainViewModel}}"/>
                                </Viewbox>
                            </Grid>

                        </RelativePanel>
                    </Grid>

                    <!-- Split Line -->
                    <Grid x:Name="SplitLineGrid">
                        <RelativePanel>
                            <Rectangle x:Name="SplitLine" Fill="{ThemeResource LinearGradientBrush}" Stretch="Fill"
                                   Height="3" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                        </RelativePanel>
                    </Grid>

                    <!-- Server Information Board  -->
                    <RelativePanel x:Name="MainBottomBoardInformation" Grid.Column="1" Grid.Row="1">
                        <TextBlock x:Name="providerName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan"
                               Text="{Binding ServerInformationBoard.CurrentServer.ProviderName, Source={StaticResource mainViewModel}}" RelativePanel.AlignLeftWithPanel="True"/>
                        <TextBlock x:Name="ipAdress" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding ServerInformationBoard.CurrentServer.Port, Source={StaticResource mainViewModel}}" RelativePanel.Below="providerName"/>
                        <TextBlock x:Name="serverName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan" 
                               Text="{Binding ServerInformationBoard.CurrentServer.ProviderName, Source={StaticResource mainViewModel}}" RelativePanel.AlignRightWithPanel="True"/>
                        <TextBlock x:Name="serverLocation" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding ServerInformationBoard.CurrentServer.Location, Source={StaticResource mainViewModel}}"
                               RelativePanel.Below="serverName" RelativePanel.AlignRightWithPanel="True"/>
                        <Button x:Name="changeServerButton" x:Uid="changeServerButton" Style="{StaticResource ContentDialogPrimaryButtonStyle}" Content="Change server" 
                            RelativePanel.Below="serverLocation" RelativePanel.AlignRightWithPanel="True"
                            Command="{Binding ChangeServerButtonPressed}"/>
                    </RelativePanel>

                </StackPanel>
           
            </RelativePanel>
        </Grid>
        
        <!-- Popup Grid with Helpful Panels -->       
        <Grid x:Name="PopupGrid" Canvas.ZIndex="1" 
              Visibility="{Binding IsPopupGridRaise, Source={StaticResource mainViewModel},Converter={StaticResource BooleanToVisibilityConverter}}"
              Background="{ThemeResource BackgroundPopupGrid}">
            
            <!-- Settings Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Visibility="{Binding SettingsPanel.IsSettingsPaneOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}">

                <RelativePanel x:Name="SettingsPanel" Style="{StaticResource Border}" >

                    <!-- Settings Panel TopBar -->
                    <RelativePanel x:Name="SettingsTopBar" Background="{ThemeResource BackgroundPanelTitle}" IsHoldingEnabled="True"
                                   RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">
                        <TextBlock x:Name="SettingsBlock" x:Uid="SettingsBlock" Text="Settings" FontSize="30" Foreground="DarkCyan" Padding="20,10"
                                       RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="CloseSettingButton" Style="{StaticResource ButtonClose}" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"
                                Command="{Binding SettingSplitViewClosing, Source={StaticResource mainViewModel}}"/>
                    </RelativePanel>

                    <!-- Shade -->
                    <Rectangle Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="SettingsTopBar" Opacity="0.3" Canvas.ZIndex="1" 
                               Height="10" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>

                    <!-- Settings Panel Main Container -->
                    <Grid Background="{ThemeResource BackgroundPanelContent}" RelativePanel.Below="SettingsTopBar">
                        <ScrollViewer x:Name="ScrollForSettings">

                            <RelativePanel x:Name="ContentPanel" Padding="20,10,0,0">

                                <!-- Language Block -->
                                <TextBlock x:Name="LanguageBlock" Text="{Binding Source={StaticResource Localizer}, Path=[LanguageBlock/Text]}" FontSize="20" Padding="0,10"/>
                                <ComboBox x:Name="LanguageComboBox" x:Uid="LanguageComboBox" Style="{StaticResource ComboBoxStyle1}" 
                                          ItemsSource="{Binding SettingsPanel.Settings.Languages, Source={StaticResource mainViewModel}}" 
                                          DisplayMemberPath="DisplayName"
                                          Margin="0,0,20,0" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" UseSystemFocusVisuals="True"
                                          RelativePanel.Below="LanguageBlock" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                                    
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                                            <Core:InvokeCommandAction Command="{Binding LanguageComboBoxChanged}" 
                                                                      CommandParameter="{Binding ElementName=LanguageComboBox,Path=SelectedItem}"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    
                                </ComboBox>

                                <!-- Mode Block -->
                                <TextBlock x:Name="ModeBlock" x:Uid="ModeBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" Text="Mode" RelativePanel.Below="LanguageComboBox"/>
                                <RadioButton  x:Name="DefaultRadioButton" x:Uid="DefaultRadioButton" GroupName="Theme" Content="Default" Width="150" RelativePanel.Below="ModeBlock" Tag="Default"
                                              Style="{StaticResource RadioButtonStyle1}"
                                              Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=DefaultRadioButton,Path=Tag}" 
                                              IsChecked="{Binding SettingsPanel.SelectedMode, Source={StaticResource mainViewModel}, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 2}"/>
                                <RadioButton  x:Name="LightRadioButton" x:Uid="LightRadioButton" GroupName="Theme" Content="Light" Width="150" RelativePanel.Below="DefaultRadioButton" Tag="Light"
                                              Style="{StaticResource RadioButtonStyle1}"
                                              Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=LightRadioButton,Path=Tag}" 
                                              IsChecked="{Binding SettingsPanel.SelectedMode, Source={StaticResource mainViewModel}, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 0}"/>
                                <RadioButton  x:Name="DarkRadioButton" x:Uid="DarkRadioButton" GroupName="Theme" Content="Dark" Width="150" RelativePanel.Below="LightRadioButton" Tag="Dark"
                                              Style="{StaticResource RadioButtonStyle1}"   
                                              Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=DarkRadioButton,Path=Tag}" 
                                              IsChecked="{Binding SettingsPanel.SelectedMode, Source={StaticResource mainViewModel}, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 1}"/>

                                <!--About Block -->
                                <TextBlock x:Name="AboutBlock" x:Uid="AboutBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" RelativePanel.Below="DarkRadioButton"/>
                                <TextBlock x:Name="ProgramNameBlock" Text="{Binding SettingsPanel.Settings.ProgramName, Source={StaticResource mainViewModel}}" Style="{StaticResource TextBlockAboutProgram}"
                                               RelativePanel.Below="AboutBlock"/>
                                <TextBlock x:Name="VersionBlock" Text="{Binding SettingsPanel.Settings.Version, Source={StaticResource mainViewModel}}" Style="{StaticResource TextBlockAboutProgram}" 
                                               RelativePanel.Below="ProgramNameBlock"/>
                                <TextBlock x:Name="MicrosoftResearchBlock" Text="Microsoft Research" Style="{StaticResource TextBlockAboutProgram}"  
                                               TextAlignment="Right" RelativePanel.Below="VersionBlock"/>
                                <RichTextBlock x:Name="AboutStoryBlock" Margin="0,30,20,30" RelativePanel.Below="MicrosoftResearchBlock">
                                    <Paragraph>
                                        <Run x:Name="AboutArticle" x:Uid="AboutArticle" />
                                    </Paragraph>
                                </RichTextBlock>

                                <!--FeedBack Block -->
                                <HyperlinkButton x:Name="FeedBackLink" x:Uid="FeedBackLink" RelativePanel.Below="AboutStoryBlock" Style="{StaticResource HyperlinkButtonSettingsPanel}" />
                                <HyperlinkButton x:Name="RateLink" x:Uid="RateLink" Style="{StaticResource HyperlinkButtonSettingsPanel}" Margin="0,0,0,30" RelativePanel.Below="FeedBackLink" />
                            </RelativePanel>
                        </ScrollViewer>
                    </Grid>

                </RelativePanel>
            </Grid>

            <!-- History Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel x:Name="HistoryPanel" Style="{StaticResource Border}" Background="{ThemeResource BackgroundPanelContent}"
                               Visibility="{Binding HistoryPanel.IsHistoryPanelOpen,Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter} }">

                    <!-- History Panel TopBar -->
                    <RelativePanel x:Name="HistoryPanelTopBar" Background="{ThemeResource BackgroundPanelTitle}" IsHoldingEnabled="True"
                                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        <TextBlock x:Name="HistoryBlock" x:Uid="HistoryBlock" Text="History" Foreground="DarkCyan" RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="DeleteHistoryButton" Command="{Binding DeleteHistoryButtonPressed}" Background="Transparent" 
                                Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE74D;" RelativePanel.RightOf="HistoryBlock"/>
                        <Button x:Name="CloseHistoryButton" Command="{Binding CloseHistoryButtonPressed}" Background="Transparent"
                                Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"/>
                    
                    </RelativePanel>
                    
                    <!-- Shade -->
                    <Rectangle Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="HistoryPanelTopBar" Opacity="0.3" Canvas.ZIndex="1" 
                               Height="10" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>

                    <!-- History Header -->
                    <Grid x:Name="HistoryHeader" RelativePanel.Below="HistoryPanelTopBar" RelativePanel.AlignRightWithPanel="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.4*"/>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="0.6*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1.1*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="CommonStyleSetterTextBlock"/>

                        <TextBlock x:Uid="ServerTextBlock" Grid.Column="1" Text="Server" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock x:Uid="DateTextBlock" Grid.Column="2" Text="Date" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock x:Uid="PingTextBlock" Grid.Column="3" Text="Ping" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock x:Uid="DownloadTextBlock" Grid.Column="4" Text="Download" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock x:Uid="UploadTextBlock" Grid.Column="5" Text="Upload" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock x:Uid="MsTextBlock" Grid.Column="3" Text="(Ms)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock x:Uid="MbpsTextBlock" Grid.Column="4" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock x:Uid="MbpsTextBlock" Grid.Column="5" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                    </Grid>
                   
                    <!-- History List -->
                    <Grid x:Name="HistoryCollectionGrid" RelativePanel.Below="HistoryHeader" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                          RelativePanel.AlignBottomWithPanel="True">
                        <GridView x:Name="HistoryGrid" ItemsSource="{Binding HistoryPanel.SpeedDataCollection, Source={StaticResource mainViewModel}}" ItemContainerStyle="{StaticResource GridViewItemContainerStyle1}" 
                                  ItemsPanel="{StaticResource MyItemsPanelTemplate}" IsItemClickEnabled="True" SelectionMode="Single" HorizontalContentAlignment="Stretch" ShowsScrollingPlaceholders="True">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="SelectionChanged">
                                    <Core:InvokeCommandAction Command="{Binding SingleHistorySelected, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <UserControl HorizontalContentAlignment="Stretch">
                                        <Grid x:Name="VisualStateGrid" HorizontalAlignment="Stretch">
                                            
                                            <!-- Adaptive Styles For GridViewItems -->
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState x:Name="Desktop">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="1000" MinWindowHeight="830"/>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Height)" Value="50"/>
                                                            <Setter Target="HistoryItemGrid.(Width)" Value="700"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(Width)" Value="50"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(FontSize)" Value="20"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Collapsed"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Middle">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="500"/>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Height)" Value="50"/>
                                                            <Setter Target="HistoryItemGrid.(Width)" Value="480"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(Width)" Value="35"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(FontSize)" Value="17"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Collapsed"/>
                                                         </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Phone">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="0"/>
                                                             </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Visibility)" Value="Collapsed"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Visible"/>
                                                        </VisualState.Setters>
                                                     </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            
                                            <!-- Phone GridViewItem Template -->
                                            <Grid x:Name="PhoneGrid">
                                                <RelativePanel x:Name="SingleHistoryCell">
                                                    
                                                    <!-- Shade -->
                                                    <Rectangle x:Name="PhoneShadeUp" Fill="{StaticResource LinearGradientBrushShade}"  Opacity="0.3" Canvas.ZIndex="1" 
                                                                Height="1" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                                                    
                                                    <!-- Phone Single History Top Bar -->
                                                    <RelativePanel x:Name="CellHeader" Background="{ThemeResource BackgroundPanelTitle}" 
                                                                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                                                        <TextBlock x:Name="DateTextBlockPhoneGrid" RelativePanel.AlignLeftWithPanel="True" Padding="20,10,0,10"
                                                                   Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"/>

                                                        <Button x:Name="SingleHistoryDeletingButtonPhoneGrid" x:Uid="SingleHistoryDeletingButtonPhoneGrid" Content="Delete" Margin="0,0,10,0" Height="40" 
                                                                Background="Transparent" Foreground="DarkCyan"  RelativePanel.AlignRightWithPanel="True" CommandParameter="{Binding }"
                                                                Command="{Binding PhoneSingleHistoryDeletedButtonPressed, Source={StaticResource mainViewModel}}"/>

                                                    </RelativePanel>
                                                    
                                                    <!-- Shade -->
                                                    <Rectangle x:Name="PhoneShadeDown" Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="CellHeader" Opacity="0.3" Canvas.ZIndex="1" 
                                                                Height="4" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                                                    
                                                    <!-- Main Content of ItemTemplate -->
                                                    <RelativePanel x:Name="CellContent" RelativePanel.Below="CellHeader" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                                                        <TextBlock x:Name="PhoneServerTextBlock" x:Uid="PhoneServerTextBlock" Text="Server" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.AlignLeftWithPanel="True"/>
                                                        <TextBlock x:Name="PhonePingTextBlock" x:Uid="PhonePingTextBlock" Text="Ping" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhoneServerTextBlock"/>
                                                        <TextBlock x:Name="PhoneMsTextBlock" x:Uid="PhoneMsTextBlock" Text="(Ms)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhonePingTextBlock" RelativePanel.Below="PhoneServerTextBlock"/>
                                                        <TextBlock x:Name="PhoneDownloadTextBlock" x:Uid="PhoneDownloadTextBlock" Text="Dowload" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhonePingTextBlock"/>
                                                        <TextBlock x:Name="PhoneDownloadMbpsTextBlock" x:Uid="PhoneDownloadMbpsTextBlock" Text="(Mbps)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhoneDownloadTextBlock" RelativePanel.Below="PhonePingTextBlock"/>
                                                        <TextBlock x:Name="PhoneUploadTextBlock" x:Uid="PhoneUploadTextBlock" Text="Upload" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhoneDownloadTextBlock"/>
                                                        <TextBlock x:Name="PhoneUploadMbpsTextBlock" x:Uid="PhoneUploadMbpsTextBlock" Text="(Mbps)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhoneDownloadTextBlock" RelativePanel.Below="PhoneDownloadTextBlock"/>

                                                        <TextBlock x:Name="PhoneServerDataTextBlock" Text="{Binding Server}" Padding="20,10,20,10" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhonePingDataTextBlock" Text="{Binding Ping}" Padding="20,10,20,10" RelativePanel.Below="PhoneServerDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhoneDownloadSpeedDataTextBlock" Text="{Binding DownloadSpeed}" Padding="20,10,20,10" RelativePanel.Below="PhonePingDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhoneUploadSpeedDataTextBlock" Text="{Binding UploadSpeed}" Padding="20,10,20,10" RelativePanel.Below="PhoneDownloadSpeedDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                    </RelativePanel>
                                                    
                                                </RelativePanel>
                                            </Grid>
                                            
                                            <!-- Common GridViewItem Template -->
                                            <Grid x:Name="HistoryItemGrid" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.4*"/>
                                                    <ColumnDefinition Width="1.5*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                     <ColumnDefinition Width="0.6*"/>
                                                    <ColumnDefinition Width="1.1*"/>
                                                    <ColumnDefinition Width="1.1*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <Button x:Name="SingleHistoryRemoveButton" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Height="50" FontFamily="Segoe MDL2 Assets" Content="&#xE711;" Background="Transparent"
                                                        Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                                        Command="{Binding SingleHistoryDeletedButtonPressed, Source={StaticResource mainViewModel}}"
                                                        CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                                <TextBlock x:Name="ServerTextBlock" Grid.Column="1" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding Server}"/>
                                                <TextBlock x:Name="DateTextBlock" Grid.Column="2" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"/>
                                                <TextBlock x:Name="PingTextBlock" Grid.Column="3" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding Ping}"/>
                                                <TextBlock x:Name="DownloadSpeedTextBlock" Grid.Column="4" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding DownloadSpeed}"/>
                                                <TextBlock x:Name="UploadSpeedTextBlock" Grid.Column="5" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding UploadSpeed}"/>
                                            </Grid>
                                            
                                        </Grid>
                                    </UserControl>
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </Grid>
                </RelativePanel>
            </Grid>
            
            <!-- Servers Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel x:Name="ServerPanel" Style="{StaticResource Border}" Background="{ThemeResource BackgroundPanelContent}"
                               Visibility="{Binding ServerPanel.IsServerPanelOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                    <!-- TopBar -->
                    <RelativePanel x:Name="ServersTopBar" IsHoldingEnabled="True" Margin="20,20" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        <TextBlock x:Name="ImageGlobe" Text="&#xE774;" FontSize="40" Foreground="DarkCyan"  TextAlignment="Right" Padding="0,10,10,0"
                                       FontFamily="Segoe MDL2 Assets" RelativePanel.AlignLeftWithPanel="True"/>
                        <Rectangle Fill="DarkCyan"  Canvas.ZIndex="1" RelativePanel.RightOf="ImageGlobe"
                               Width="2" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"/>
                        <TextBlock x:Name="HeaderServerName" Text="{Binding ServerInformationBoard.CurrentServer.ProviderName, Source={StaticResource mainViewModel}}" Foreground="DarkCyan" Padding="10,0,0,0"
                                   RelativePanel.RightOf="ImageGlobe" VerticalAlignment="Top"/>
                        <TextBlock x:Name="HeaderServerLocation" Text="{Binding ServerInformationBoard.CurrentServer.Location, Source={StaticResource mainViewModel}}" Padding="10,0,0,0"
                                   RelativePanel.RightOf="ImageGlobe" RelativePanel.Below="HeaderServerName"/>
                        <Button x:Name="CloseServersPanelButton" Style="{StaticResource ButtonClose}"  Content="&#xE711;"
                                Command="{Binding CloseServerPanelButtonPressed}" RelativePanel.AlignRightWithPanel="True"/>
                    </RelativePanel>
                    
                    <!-- Search Bar -->
                    <AutoSuggestBox x:Name="ServerSuggestBox" x:Uid="ServerSuggestBox" Style="{StaticResource AutoSuggestBoxStyle1}" PlaceholderText="Search" Margin="20,0" QueryIcon="Find" 
                                    RelativePanel.Below="ServersTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="TextChanged">
                                <Core:InvokeCommandAction Command="{Binding ServerSuggestBoxTextChanged, Source={StaticResource mainViewModel}}"
                                                          CommandParameter="{Binding ElementName=ServerSuggestBox, Path=Text}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </AutoSuggestBox>

                    <!-- AvailableServers Line -->
                    <TextBlock x:Name="AvailableServers" x:Uid="AvailableServers" Text="Available servers:" FontSize="20" Margin="20,10,0,10" RelativePanel.Below="ServerSuggestBox"/>

                    <!-- Servers List -->
                    <Grid RelativePanel.Below="AvailableServers" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignBottomWithPanel="True">
                        <ListView x:Name="ServersListView" ItemsSource="{Binding ServerPanel.ServerNamesCollection, Source={StaticResource mainViewModel}}" 
                                  ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}" Margin="20,0,20,0" ItemsPanel="{StaticResource MyItemsPanelTemplate}"
                                  RelativePanel.Below="AvailableServers">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="SelectionChanged">
                                    <Core:InvokeCommandAction Command="{Binding SingleServerSelected, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=ServersListView, Path=SelectedItem}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <ListView.ItemTemplate>
                                <DataTemplate>

                                    <RelativePanel>
                                        <TextBlock x:Name="ServerName" Grid.Column="0" Text="{Binding}" FontSize="20" Foreground="DarkCyan" RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="ProviderName"/>
                                        <TextBlock x:Name="ProviderName" Grid.Column="1" Text=" - Net Holding DDC" FontSize="20" RelativePanel.AlignRightWithPanel="True"/>
                                    </RelativePanel>

                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                    
                </RelativePanel>
            </Grid>
            
            <!-- Phone Main Panel Buttons -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource SystemControlChromeHighAcrylicElementMediumBrush}"
                  Visibility="{Binding IsPhoneMainPanelOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}"
                  RequestedTheme="{Binding SettingsPanel.Settings.Theme, Source={StaticResource mainViewModel}}">
                <RelativePanel x:Name="PhonePanel">

                    <!-- Gamburger Button -->
                    <RelativePanel x:Name="PhoneMainPanelTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        <Button x:Name="PopupGamburgerButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE700;" Margin="10,30"
                                HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20" FontFamily="Segoe MDL2 Assets"
                                Command="{Binding GamburgerButtonPressed, Source={StaticResource mainViewModel}}"/>

                    </RelativePanel>

                    <!-- Setings,History,Share Button -->
                    <RelativePanel x:Name="PhoneMainPanelContentBar" RelativePanel.AlignBottomWithPanel="True"
                                   RelativePanel.Below="PhoneMainPanelTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        <Button x:Name="PhoneSetingsButton" Margin="10,0,0,10" FontSize="20" RelativePanel.AlignBottomWithPanel="True" Background="Transparent"
                                Command="{Binding SettingsButtonPressed, Source={StaticResource mainViewModel}}">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xE713;"/>
                                <TextBlock x:Uid="PhoneSetingsTextBlock" Text="Settings" Padding="20,0,0,0"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="PhoneHistoryButton" Margin="10,0,0,0" FontSize="20" Background="Transparent"
                                Command="{Binding HistoryButtonPressed, Source={StaticResource mainViewModel}}">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xE81C;"/>
                                <TextBlock x:Uid="PhoneHistoryTextBlock" Text="History" Padding="20,0,0,0"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="PhoneShareButton" Margin="10,0,0,0" FontSize="20" RelativePanel.Above="PhoneSetingsButton" Background="Transparent"
                                Command="{Binding BackButtonPressed, Source={StaticResource mainViewModel}}" Foreground="DarkCyan">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xE72D;"/>
                                <TextBlock x:Uid="PhoneShareTextBlock" Text="Share" Padding="20,0,0,0"/>
                            </StackPanel>
                        </Button>

                    </RelativePanel>

                </RelativePanel>
            </Grid>

        </Grid>
        
    </Grid>
</Page>
