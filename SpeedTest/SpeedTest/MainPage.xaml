<Page
    x:Class="SpeedTest.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SpeedTest"
    xmlns:vm="using:SpeedTest.ViewModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.DataContext>
        <vm:MainPageViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <ControlTemplate TargetType="Button" x:Key="btTemplate">
            <Border CornerRadius="200" BorderBrush="CadetBlue" BorderThickness="3" Height="400" Width="400" >
                <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Start" Height="120"/>
            </Border>
        </ControlTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.4*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.1*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.1*"/>
        </Grid.ColumnDefinitions>

        <!-- Arc Control -->
        <local:Arc Grid.Column="1" Fill="DarkCyan" Thickness="30" Radius="200" PercentValue="215"/>
        <local:Arc Grid.Column="1" Fill="Gray" Thickness="30" Radius="200" PercentValue="400" Opacity="0.4"/>
        <local:Arc Grid.Column="1" Fill="DarkBlue" Thickness="30" Radius="171" PercentValue="97"/>
        <local:Arc Grid.Column="1" Fill="Gray" Thickness="30" Radius="171" PercentValue="400" Opacity="0.2"/>

        <!-- Settings Panel -->
        <StackPanel Grid.Column="2" HorizontalAlignment="Center" Margin="0,50">
            <Button x:Name="setingsButton" 
                Background="Transparent"
                FontFamily="Segoe MDL2 Assets" 
                FontSize="36"                
                Content="&#xE713;" 
                Command="{Binding SettingsButtonPressed}"/>
            <Button x:Name="historyButton" 
                Background="Transparent"
                FontFamily="Segoe MDL2 Assets" 
                FontSize="36"                
                Content="&#xE81C;" 
                Command="{Binding HistoryButtonPressed}"/>
            <Button x:Name="backButton" 
                Background="Transparent"
                FontFamily="Segoe MDL2 Assets" 
                FontSize="36"                
                Content="&#xE72D;"
                Command="{Binding BackButtonPressed}"/>
        </StackPanel>

        <!-- Start Button -->
        <Button x:Name="startButton" 
                Template="{StaticResource btTemplate}" 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Grid.Column="1" FontSize="80"
                Command="{Binding StartButtonPressed}"/>

        <!-- Split Line -->
        <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" Width="1000" Margin="0,0,0,307">
            <Line Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" StrokeThickness="3" X1="0"  X2="499">
                <Line.Stroke>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="0.8,1" ColorInterpolationMode="ScRgbLinearInterpolation">
                        <GradientStop Color="#FFBDEAEC" Offset="0" />
                        <GradientStop Color="#FF104364" Offset="1" />
                    </LinearGradientBrush>
                </Line.Stroke>
            </Line>

            <Line Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" StrokeThickness="3" X1="0"  X2="499">
                <Line.Stroke>
                    <LinearGradientBrush StartPoint="0.1,1" EndPoint="0.8,1" ColorInterpolationMode="ScRgbLinearInterpolation">
                        <GradientStop Color="#FFBDEAEC" Offset="1" />
                        <GradientStop Color="#FF104364" Offset="0" />
                    </LinearGradientBrush>
                </Line.Stroke>
            </Line>
        </Grid>

        <!-- Main Board -->
        <RelativePanel Grid.Column="1" Grid.Row="1" Width="600">
            <TextBlock x:Name="providerName"
                       Width="300"
                       Height="60"
                       FontSize="30"
                       Text="{Binding ProviderName}"
                       TextAlignment="Center"
                       RelativePanel.AlignLeftWithPanel="True"/>
            <TextBlock x:Name="ipAdress"
                       Width="300"
                       Height="60"
                       FontSize="30"
                       Text="{Binding IpAdress}"
                       TextAlignment="Center"                       
                       RelativePanel.Below="providerName"/>
            <TextBlock x:Name="serverName"
                       Width="300"
                       Height="60"
                       FontSize="30"
                       Text="{Binding ServerName}"
                       TextAlignment="Center"
                       RelativePanel.RightOf="providerName"/>
            <TextBlock x:Name="serverLocation"
                       Width="300"
                       Height="60"
                       FontSize="30"
                       Text="{Binding ServerLocation}"
                       TextAlignment="Center"
                       RelativePanel.Below="serverName"
                       RelativePanel.RightOf="ipAdress"/>
            <Button x:Name="changeServerButton"
                    Width="300"
                    Height="60"
                    FontSize="30"
                    Content="Change server"
                    RelativePanel.Below="serverLocation"
                    RelativePanel.RightOf="providerName" 
                    Foreground="White" 
                    FontWeight="Normal"
                    Opacity="1"
                    Command="{Binding ChangeServerButtonPressed}">
                <Button.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0.6,0">
                        <GradientStop Color="#FF14CEEC" Offset="1"/>
                        <GradientStop Color="#FF101757" Offset="0"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>
        </RelativePanel>

        <!-- Gamburger Settings Panel -->
        <SplitView x:Name="SettingSplitView" IsPaneOpen="{Binding IsPaneOpen}" FlowDirection="RightToLeft" OpenPaneLength="450" Grid.Column="1" Margin="1258,50,52,154" Grid.RowSpan="2" Grid.ColumnSpan="2">
            
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="PaneClosing" SourceObject="{Binding ElementName=SettingSplitView}">
                    <Core:InvokeCommandAction Command="{Binding SettingSplitViewClosing}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>

            <SplitView.Pane>
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    
                    <RelativePanel Background="White">
                        <TextBlock x:Name="SettingsBlock" Text="Settings" FontSize="30" Foreground="DarkCyan"  Padding="30,10" FocusVisualPrimaryBrush="White" RelativePanel.AlignRightWithPanel="True"/>
                        <Button Height="60" Width="60" Background="Transparent" Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE711;"/> 
                    </RelativePanel>
                    
                    
                    <TextBlock x:Name="LanguageBlock" Text="Language" FontSize="20" Padding="30,10" TextAlignment="Right"/>
                    <ComboBox x:Name="LanguageComboBox" PlaceholderText="Choose language" Width="390" Margin="30,0,30,10" HorizontalContentAlignment="Left" FlowDirection="LeftToRight">
                        <x:String>English</x:String>
                        <x:String>Russian</x:String>
                        <x:String>Ukranian</x:String>
                    </ComboBox>
                    
                    <TextBlock x:Name="ModeBlock" Text="Mode" FontSize="30" Foreground="DarkCyan" Padding="30,10" TextAlignment="Right"/>
                    <RadioButton GroupName="Theme" Content="Light" HorizontalAlignment="Left" Margin="330,0,0,0" Width="90" IsChecked="True"/>
                    <RadioButton GroupName="Theme" Content="Dark" HorizontalAlignment="Left" Margin="330,0,0,0" Width="120"/>

                    <TextBlock x:Name="AboutBlock" Text="About" FontSize="30" Foreground="DarkCyan" Padding="30,10" TextAlignment="Right"/>
                    <TextBlock x:Name="ProgramNameBlock" Text="Network Speed Test" FontSize="15" Foreground="Gray"  Padding="0,00,30,0" TextAlignment="Right"/>
                    <TextBlock x:Name="VersionBlock" Text="Version №" FontSize="15" Foreground="Gray"  Padding="0,00,30,0" TextAlignment="Right"/>
                    <TextBlock x:Name="MicrosoftResearchBlock" Text="Microsoft Research" FontSize="15" Foreground="Gray"  Padding="0,00,30,0" TextAlignment="Right"/>
                    <RichTextBlock x:Name="AboutStoryBlock" Margin="50,30,30,30">
                        <Paragraph  TextAlignment="Right">
                            Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.
                            You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.
                            You can also use inline text elements and Typography attached properties to format your text. These options affect only how the RichTextBlock displays the text locally,
                            so if you copy and paste the text into a rich text control, for example, no formatting is applied.
                            Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.
                            You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.
                            You can also use inline text elements and Typography attached properties to format your text. These options affect only how the RichTextBlock displays the text locally,
                            so if you copy and paste the text into a rich text control, for example, no formatting is applied.
                            Although the RichTextBlock stores plain text, you can apply various formatting options to customize how the text is rendered in your app.
                            You can set standard control properties like FontFamily, FontSize, FontStyle, Foreground, and CharacterSpacing to change the look of the text.
                            You can also use inline text elements and Typography attached properties to format your text. These options affect only how the RichTextBlock displays the text locally,
                            so if you copy and paste the text into a rich text control, for example, no formatting is applied.
                        </Paragraph>
                    </RichTextBlock>

                    <HyperlinkButton NavigateUri="https://docs.microsoft.com" HorizontalAlignment="Right" Margin="30,0" FontSize="16">Send feedback</HyperlinkButton>
                    <HyperlinkButton NavigateUri="https://docs.microsoft.com" HorizontalAlignment="Right" Margin="30,0" FontSize="16">Rate us</HyperlinkButton>

                </StackPanel>
            </SplitView.Pane>
        </SplitView>

    </Grid>
</Page>
