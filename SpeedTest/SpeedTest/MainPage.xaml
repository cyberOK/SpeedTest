<Page
    x:Class="SpeedTest.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SpeedTest"
    xmlns:vm="using:SpeedTest.ViewModel" 
    xmlns:arcControl="using:SpeedTest.ArcControl"
    xmlns:converter="using:SpeedTest.ViewModel.Converters"
    xmlns:speedDate="using:SpeedTest.ViewModel.HelpfullCollections"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Windows10FallCreatorsUpdate="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    mc:Ignorable="d">

    <Page.DataContext>
        <StaticResource ResourceKey="mainViewModel"/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/MainPageStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="Styles/LightTheme" x:Key="Light"/>
                <ResourceDictionary Source="Styles/DarkTheme" x:Key="Dark"/>
            </ResourceDictionary.ThemeDictionaries>

        </ResourceDictionary>
    </Page.Resources>

    <Grid RequestedTheme="{Binding Settings.Theme, Source={StaticResource mainViewModel}}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="StateGroup">
                <!-- Desktop version -->
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" MinWindowHeight="830"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="36"/>
                        <Setter Target="historyButton.(FontSize)" Value="36"/>
                        <Setter Target="backButton.(FontSize)" Value="36"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="150,0,150,380"/>
                        <Setter Target="StartArc.(Radius)" Value="170"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="200"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="180"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="200"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="180"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="20"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="120"/>
                        <Setter Target="StartButton.(Width)" Value="200"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,30"/>
                        <Setter Target="StartButton.(FontSize)" Value="90"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,15"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="40"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,15"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="1000"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="10"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,30"/>
                        <Setter Target="LeftSplitLine.(X1)" Value="0"/>
                        <Setter Target="LeftSplitLine.(X2)" Value="500"/>
                        <Setter Target="RightSplitLine.(X1)" Value="0"/>
                        <Setter Target="RightSplitLine.(X2)" Value="500"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,60"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="500"/>
                        <Setter Target="providerName.(Width)" Value="250"/>
                        <Setter Target="providerName.(Height)" Value="50"/>
                        <Setter Target="providerName.(FontSize)" Value="30"/>
                        <Setter Target="ipAdress.(Width)" Value="250"/>
                        <Setter Target="ipAdress.(Height)" Value="50"/>
                        <Setter Target="ipAdress.(FontSize)" Value="30"/>
                        <Setter Target="serverName.(Width)" Value="250"/>
                        <Setter Target="serverName.(Height)" Value="50"/>
                        <Setter Target="serverName.(FontSize)" Value="30"/>
                        <Setter Target="serverLocation.(Width)" Value="250"/>
                        <Setter Target="serverLocation.(Height)" Value="50"/>
                        <Setter Target="serverLocation.(FontSize)" Value="30"/>
                        <Setter Target="changeServerButton.(Width)" Value="250"/>
                        <Setter Target="changeServerButton.(Height)" Value="50"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="28"/>
                        <!-- Test Data Board -->
                        <Setter Target="TestDataBoard.(Width)" Value="1000"/>
                        <Setter Target="TestDataBoard.(Height)" Value="150"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="280"/>
                        <Setter Target="PingText.(FontSize)" Value="40"/>
                        <Setter Target="msText.(FontSize)" Value="40"/>
                        <Setter Target="DataPingText.(FontSize)" Value="80"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="410"/>
                        <Setter Target="DownloadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="80"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="310"/>
                        <Setter Target="UploadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="40"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="80"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="SettingsPanel.(Height)" Value="850"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="550"/>
                        <Setter Target="ServerPanel.(Width)" Value="500"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="450"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="30"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="25"/>

                    </VisualState.Setters>
                </VisualState>
                <!-- %00 X 500 version -->
                <VisualState x:Name="Middle">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,10,10,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="25"/>
                        <Setter Target="historyButton.(FontSize)" Value="25"/>
                        <Setter Target="backButton.(FontSize)" Value="25"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,30,50,220"/>
                        <Setter Target="StartArc.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="120"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="110"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="120"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="110"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="10"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="90"/>
                        <Setter Target="StartButton.(Width)" Value="150"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,15"/>
                        <Setter Target="StartButton.(FontSize)" Value="50"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="25"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="440"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="10"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,10"/>
                        <Setter Target="LeftSplitLine.(X1)" Value="0"/>
                        <Setter Target="LeftSplitLine.(X2)" Value="220"/>
                        <Setter Target="RightSplitLine.(X1)" Value="0"/>
                        <Setter Target="RightSplitLine.(X2)" Value="220"/>
                        <!-- Test Data Board -->
                        <Setter Target="TestDataBoard.(Width)" Value="440"/>
                        <Setter Target="TestDataBoard.(Height)" Value="70"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="125"/>
                        <Setter Target="PingText.(FontSize)" Value="18"/>
                        <Setter Target="msText.(FontSize)" Value="18"/>
                        <Setter Target="DataPingText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="180.4"/>
                        <Setter Target="DownloadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsText.(FontSize)" Value="18"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="40"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="136.4"/>
                        <Setter Target="UploadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="18"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="40"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="300"/>
                        <Setter Target="providerName.(Width)" Value="150"/>
                        <Setter Target="providerName.(Height)" Value="30"/>
                        <Setter Target="providerName.(FontSize)" Value="20"/>
                        <Setter Target="ipAdress.(Width)" Value="150"/>
                        <Setter Target="ipAdress.(Height)" Value="30"/>
                        <Setter Target="ipAdress.(FontSize)" Value="20"/>
                        <Setter Target="serverName.(Width)" Value="150"/>
                        <Setter Target="serverName.(Height)" Value="30"/>
                        <Setter Target="serverName.(FontSize)" Value="20"/>
                        <Setter Target="serverLocation.(Width)" Value="150"/>
                        <Setter Target="serverLocation.(Height)" Value="30"/>
                        <Setter Target="serverLocation.(FontSize)" Value="20"/>
                        <Setter Target="changeServerButton.(Width)" Value="150"/>
                        <Setter Target="changeServerButton.(Height)" Value="35"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="18"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Height)" Value="475"/>
                        <Setter Target="SettingsPanel.(Margin)" Value="0,0,25,0"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="475"/>
                        <Setter Target="ServerPanel.(Width)" Value="425"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="375"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <!-- Background Image with Grid Above It -->
        <Image Source="Assets/white-abstract-style-background-vector.jpg" Stretch="Fill"/>
        <Grid Background="{ThemeResource BackgroundOpacityBrushForPhoto}"/>

        <!-- Main Grid -->
        <Grid x:Name="MainGrid">
            <!--<Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.7*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.1*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>-->

            <!-- Settings Panel Buttons -->
            <StackPanel x:Name="SettingsPanelButtons" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button x:Name="setingsButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE713;" Margin="10"
                        Command="{Binding SettingsButtonPressed, Source={StaticResource mainViewModel}}"/>
                <Button x:Name="historyButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE81C;" Margin="10"
                        Command="{Binding HistoryButtonPressed, Source={StaticResource mainViewModel}}"/>
                <Button x:Name="backButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE72D;" Margin="10"
                        Command="{Binding BackButtonPressed, Source={StaticResource mainViewModel}}"/>
            </StackPanel>

            <!-- Arc Board -->
            <Grid x:Name="ArcGrid" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,50,0,0">

                <!-- Arc Controls -->
                <arcControl:Arc x:Name="StartArc" Grid.Column="1" Fill="DarkCyan" Thickness="3" PercentValue="400" EnableGradient="False" 
                                Visibility="{Binding IsStartButtonPressed, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Reverse, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="TryConnectArc1" Grid.Column="1" Fill="Gray" PercentValue="400" Opacity="0.4" EnableGradient="False" 
                                Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="TryConnectArc2" Grid.Column="1" Fill="Gray" PercentValue="400" Opacity="0.2" EnableGradient="False"
                                Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="DownloadSpeedArc" Grid.Column="1" Fill="DarkCyan" PercentValue="215"
                                Visibility="{Binding IsDownloadSpeedDataRecieved, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="UploadSpeedArc" Grid.Column="1" Fill="DarkBlue" PercentValue="97"
                                Visibility="{Binding IsUploadSpeedDataRecieved, Source={StaticResource mainViewModel}}"/>

                <!-- Start Button and SpeedDataNumbersTextBlock and TryConnectTextBlock-->
                <Button x:Name="StartButton" Style="{StaticResource ButtonStyle}" Canvas.ZIndex="1" Content="Start" Grid.Column="1" HorizontalAlignment="Center"
                        Visibility="{Binding IsStartButtonPressed, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Reverse, Source={StaticResource mainViewModel}}"
                        Command="{Binding StartButtonPressed, Source={StaticResource mainViewModel}}"/>

                <TextBlock x:Name="TryConnectTextBlock" Grid.Column="1" Text="Connecting..." HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"  />            

                <TextBlock x:Name="SpeedDataNumbersTextBlock" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Visibility="{Binding IsSpeedDataNumbersReceiving, Source={StaticResource mainViewModel}}"              
                   Text="{Binding SpeedDataNumbers, Source={StaticResource mainViewModel}}"/>

            </Grid>

            <!-- Bottom Board -->
            <StackPanel x:Name="BottomBoard" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom">

                <!-- Test Data Board -->
                <Grid x:Name="TestDataBoard" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" >
                    <StackPanel Orientation="Horizontal">

                        <!-- Ping Fields -->
                        <Grid x:Name="PingFieldsGrid" Visibility="Visible">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.4*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PingText" Grid.Column="0" Text="Ping" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="msText" Grid.Column="0" Grid.Row="1" Text="(ms)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                            <TextBlock x:Name="DataPingText" Grid.Column="1" Grid.RowSpan="2" Text="163" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>

                        <!-- Download Speed Fields -->
                        <Grid x:Name="DownloadSpeedFieldsGrid" Visibility="Visible">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.8*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="DownloadText" Grid.Column="0" Text="Download" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="mbpsText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                            <TextBlock x:Name="DownloadSpeedData" Grid.Column="1" Grid.RowSpan="2" Text="121" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>

                        <!-- Upload Speed Fields -->
                        <Grid x:Name="UploadSpeedFieldsGrid" Visibility="Visible">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.77*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="UploadText" Grid.Column="0" Text="Upload" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="mbpsUploadText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                            <TextBlock x:Name="UploadDataText" Grid.Column="1" Grid.RowSpan="2" Text="111" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>

                    </StackPanel>
                </Grid>


                <!-- Split Line -->
                <Grid x:Name="SplitLineGrid" Grid.Column="1" Grid.Row="1">
                    <RelativePanel>
                        <Line x:Name="LeftSplitLine" Stroke="{ThemeResource LinearGradientBrush1}" StrokeThickness="3" RelativePanel.AlignLeftWithPanel="True"/>
                        <Line x:Name="RightSplitLine" Stroke="{ThemeResource LinearGradientBrush2}" StrokeThickness="3" RelativePanel.AlignRightWithPanel="True"/>
                    </RelativePanel>
                </Grid>

                <!-- Main Bottom Board Information -->
                <RelativePanel x:Name="MainBottomBoardInformation" Grid.Column="1" Grid.Row="1">
                    <TextBlock x:Name="providerName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan"
                               Text="{Binding ProviderName}" RelativePanel.AlignLeftWithPanel="True"/>
                    <TextBlock x:Name="ipAdress" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding IpAdress}" RelativePanel.Below="providerName"/>
                    <TextBlock x:Name="serverName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan" 
                               Text="{Binding ServerName, Source={StaticResource mainViewModel}}" RelativePanel.RightOf="providerName"/>
                    <TextBlock x:Name="serverLocation" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding ServerLocation, Source={StaticResource mainViewModel}}"
                               RelativePanel.Below="serverName" RelativePanel.RightOf="ipAdress"/>
                    <Button x:Name="changeServerButton" Style="{StaticResource ButtonBottomBoard}" Content="Change server"
                            RelativePanel.Below="serverLocation" RelativePanel.RightOf="providerName" 
                            Command="{Binding ChangeServerButtonPressed}">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0.6,0">
                                <GradientStop Color="#FF14CEEC" Offset="1"/>
                                <GradientStop Color="#FF101757" Offset="0"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                </RelativePanel>

            </StackPanel>

        </Grid>

        <!-- Popup Grid with Helpful Panels -->
        <Grid x:Name="PopupGrid" Canvas.ZIndex="1" 
              Visibility="{Binding IsPopupGridRaise, Source={StaticResource mainViewModel},Converter={StaticResource BooleanToVisibilityConverter}}"
              Background="{StaticResource BackgroundPopupGrid}">

            <!-- Settings Panel -->
            <Grid Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Visibility="{Binding IsSettingsPaneOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}">

                <RelativePanel x:Name="SettingsPanel" Style="{StaticResource Border}" Width="450" HorizontalAlignment="Right" VerticalAlignment="Top">

                    <RelativePanel x:Name="SettingsTopBar" Background="{ThemeResource BackgroundPanelTitle}"  Width="450" IsHoldingEnabled="True">
                        <TextBlock x:Name="SettingsBlock" Text="Settings" FontSize="30" Foreground="DarkCyan" Padding="20,10"
                                       RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="CloseSettingButton" Style="{StaticResource ButtonClose}" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"
                                Command="{Binding SettingSplitViewClosing, Source={StaticResource mainViewModel}}"/>
                    </RelativePanel>

                    <Line Stroke="{ThemeResource LinearGradientBrushShade}" StrokeThickness="20" X1="0" X2="450" RelativePanel.Below="SettingsTopBar" Opacity="0.3" Canvas.ZIndex="1"/>

                    <Grid Background="{ThemeResource BackgroundPanelContent}" RelativePanel.Below="SettingsTopBar">
                        <ScrollViewer x:Name="ScrollForSettings" Width="450">

                            <RelativePanel x:Name="ContentPanel" Width="450" Padding="20,10,0,0">
                                <TextBlock x:Name="LanguageBlock" Text="Language" FontSize="20" Padding="0,10"/>
                                <ComboBox Style="{StaticResource ComboBoxStyle1}" x:Name="LanguageComboBox" ItemsSource="{Binding Settings.Languages, Source={StaticResource mainViewModel}}" 
                                          PlaceholderText="English" Width="410" FlowDirection="LeftToRight" RelativePanel.Below="LanguageBlock">
                                    
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                                            <Core:InvokeCommandAction Command="{Binding LanguageComboBoxChanged}" 
                                                                      CommandParameter="{Binding ElementName=LanguageComboBox,Path=SelectedItem}"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    
                                </ComboBox>

                                <TextBlock x:Name="ModeBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" Text="Mode" RelativePanel.Below="LanguageComboBox"/>
                                <RadioButton Style="{StaticResource RadioButtonStyle1}" x:Name="LightRadioButton" GroupName="Theme"  Content="Light" Width="90" RelativePanel.Below="ModeBlock"
                                                 Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=LightRadioButton,Path=Content}" 
                                                 IsChecked="{Binding SelectedMode, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 0}"/>
                                <RadioButton Style="{StaticResource RadioButtonStyle1}" x:Name="DarkRadioButton" GroupName="Theme" Content="Dark" Width="90" RelativePanel.Below="LightRadioButton"
                                                 Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=DarkRadioButton,Path=Content}" 
                                                 IsChecked="{Binding SelectedMode, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 1}"/>

                                <TextBlock x:Name="AboutBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" Text="About" RelativePanel.Below="DarkRadioButton"/>
                                <TextBlock x:Name="ProgramNameBlock" Text="{Binding Settings.ProgramName}" Style="{StaticResource TextBlockAboutProgram}"
                                               RelativePanel.Below="AboutBlock"/>
                                <TextBlock x:Name="VersionBlock" Text="{Binding Settings.Version}" Style="{StaticResource TextBlockAboutProgram}" 
                                               RelativePanel.Below="ProgramNameBlock"/>
                                <TextBlock x:Name="MicrosoftResearchBlock" Text="Microsoft Research" Style="{StaticResource TextBlockAboutProgram}"  
                                               TextAlignment="Right" RelativePanel.Below="VersionBlock"/>
                                <RichTextBlock x:Name="AboutStoryBlock" Margin="0,30,30,30" RelativePanel.Below="MicrosoftResearchBlock">
                                    <Paragraph>
                                        <Run Text="{Binding Settings.AboutArticle}"/>
                                    </Paragraph>
                                </RichTextBlock>

                                <HyperlinkButton x:Name="FeedBackLink" NavigateUri="{Binding Settings.FeedBackLink}" Style="{StaticResource HyperlinkButtonSettingsPanel}" 
                                                 RelativePanel.Below="AboutStoryBlock">Feedback</HyperlinkButton>
                                <HyperlinkButton x:Name="RateLink" NavigateUri="{Binding Settings.RateLink}" Style="{StaticResource HyperlinkButtonSettingsPanel}"
                                                 Margin="0,0,0,30" RelativePanel.Below="FeedBackLink">Rate us</HyperlinkButton>
                            </RelativePanel>
                        </ScrollViewer>
                    </Grid>

                </RelativePanel>
            </Grid>

            <!-- History Panel -->
            <Grid Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel  Style="{StaticResource Border}" Height="700" Width="700" Background="{ThemeResource BackgroundPanelContent}"
                                Visibility="{Binding IsHistoryPanelOpen, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <RelativePanel x:Name="HistoryPanel" Background="{ThemeResource BackgroundPanelTitle}" IsHoldingEnabled="True" Width="700">
                        
                        <TextBlock x:Name="HistoryBlock" Text="History" FontSize="30" Foreground="DarkCyan" Padding="30,10" 
                                       RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="DeleteHistoryButton" Command="{Binding DeleteHistoryButtonPressed}" Height="60" Width="60"  Background="Transparent" 
                                    Foreground="DarkCyan" FontSize="30" FontFamily="Segoe MDL2 Assets" Content="&#xE74D;" RelativePanel.RightOf="HistoryBlock"/>
                        <Button x:Name="CloseHistoryButton" Command="{Binding CloseHistoryButtonPressed}" Height="60" Width="60" Background="Transparent" FontSize="30"
                                    Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"/>
                    
                    </RelativePanel>

                    <Line x:Name="GreyWhiteShadeLine" Stroke="{ThemeResource LinearGradientBrushShade}" StrokeThickness="20" X1="0" X2="700" Opacity="0.3" RelativePanel.Below="HistoryPanel"/>

                    <Grid x:Name="HistoryHeader" Width="700" Height="70" Margin="0,0,0,10" RelativePanel.Below="HistoryPanel" RelativePanel.AlignRightWithPanel="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.4*"/>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="1.2*"/>
                            <ColumnDefinition Width="0.8*"/>
                            <ColumnDefinition Width="0.8*"/>
                            <ColumnDefinition Width="0.8*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="1" Text="Server" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="2" Text="Date" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="3" Text="Ping" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="4" Text="Download" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="5" Text="Upload" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="3" Text="(Ms)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock Grid.Column="4" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock Grid.Column="5" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                    </Grid>

                    <Grid x:Name="HistoryCollectionGrid" RelativePanel.Below="HistoryHeader" Height="560" Width="700">
                        <GridView x:Name="HistoryGrid" ItemsSource="{Binding SpeedDataCollection}" ItemContainerStyle="{StaticResource GridViewItemContainerStyle1}" IsItemClickEnabled="True" SelectionMode="Single">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="SelectionChanged">
                                    <Core:InvokeCommandAction Command="{Binding SingleHistorySelected, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <GridView.ItemTemplate>
                                <DataTemplate>

                                    <Grid x:Name="HistoryItemGrid" Width="700" Height="50">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="0.4*"/>
                                            <ColumnDefinition Width="1.5*"/>
                                            <ColumnDefinition Width="1.2*"/>
                                            <ColumnDefinition Width="0.8*"/>
                                            <ColumnDefinition Width="0.8*"/>
                                            <ColumnDefinition Width="0.8*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <Button x:Name="SingleHistoryRemoveButton" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                            Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                            Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}"
                                            Height="50" Width="50" FontSize="20" FontFamily="Segoe MDL2 Assets" Content="&#xE711;">

                                            <Interactivity:Interaction.Behaviors>
                                                <Core:EventTriggerBehavior EventName="Click">
                                                    <Core:InvokeCommandAction Command="{Binding SingleHistoryDeletedButtonPressed, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                                </Core:EventTriggerBehavior>
                                            </Interactivity:Interaction.Behaviors>

                                        </Button>
                                        <Grid Grid.Column="1" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                            <TextBlock Text="{Binding Server}" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"/>
                                        </Grid>
                                        <Grid Grid.Column="2" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                            <TextBlock Grid.Column="2" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                       Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"/>
                                        </Grid>
                                        <Grid Grid.Column="3" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                            <TextBlock Grid.Column="3" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                       Text="{Binding Ping}"/>
                                        </Grid>
                                        <Grid Grid.Column="4" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                            <TextBlock Grid.Column="4" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                       Text="{Binding DownloadSpeed}"/>
                                        </Grid>
                                        <Grid Grid.Column="5" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                            <TextBlock Grid.Column="5" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                       Text="{Binding UploadSpeed}"/>
                                        </Grid>
                                    </Grid>

                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </Grid>
                </RelativePanel>
            </Grid>

            <!-- Servers Panel -->
            <Grid Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel x:Name="ServerPanel" Style="{StaticResource Border}" Background="{ThemeResource BackgroundPanelContent}" Height="550" Width="500"
                               Visibility="{Binding IsServerPanelOpen, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <Button x:Name="CloseServersPanelButton" Style="{StaticResource ButtonClose}"  Content="&#xE711;"
                            Command="{Binding CloseServerPanelButtonPressed}" RelativePanel.AlignRightWithPanel="True"/>
                    <RelativePanel x:Name="ServersTopBar" IsHoldingEnabled="True" Width="500" Height="60" Margin="0,20">
                        <TextBlock x:Name="ImageGlobe" Text="&#xE774;" FontSize="40" Foreground="DarkCyan" Height="60" Width="100" TextAlignment="Right" Padding="0,10,10,0"
                                       FontFamily="Segoe MDL2 Assets" RelativePanel.AlignLeftWithPanel="True"/>
                        <Line X1="100" Y1="5" X2="100" Y2="55" Stroke="DarkCyan" StrokeThickness="2" />
                        <Grid RelativePanel.RightOf="ImageGlobe" Height="60">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="0.7*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="HeaderServerName" Grid.Row="0" Text="{Binding ServerName, Source={StaticResource mainViewModel}}" Foreground="DarkCyan" Padding="10,0,0,0" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="HeaderServerLocation" Grid.Row="1" Text="{Binding ServerLocation, Source={StaticResource mainViewModel}}" Padding="10,0,0,0" VerticalAlignment="Bottom"/>
                        </Grid>
                    </RelativePanel>

                    <AutoSuggestBox x:Name="ServerSuggestBox" Style="{StaticResource AutoSuggestBoxStyle1}"  PlaceholderText="Search" Height="40" Margin="24,0" QueryIcon="Find" RelativePanel.Below="ServersTopBar">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="TextChanged">
                                <Core:InvokeCommandAction Command="{Binding ServerSuggestBoxTextChanged, Source={StaticResource mainViewModel}}"
                                                          CommandParameter="{Binding ElementName=ServerSuggestBox, Path=Text}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </AutoSuggestBox>

                    <TextBlock x:Name="AvailableServers" Text="Available servers:" FontSize="20" Width="450" Margin="24,10,0,10"
                                        RelativePanel.Below="ServerSuggestBox"/>
                    
                    <Grid RelativePanel.Below="AvailableServers">
                        <ScrollViewer>
                            <ListView x:Name="ServersListView" ItemsSource="{Binding ServerNamesCollection, Source={StaticResource mainViewModel}}" 
                                      ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}"  Margin="10,0,15,0"
                                        Width="500" Height="400" RelativePanel.Below="AvailableServers">

                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                                        <Core:InvokeCommandAction Command="{Binding SingleServerSelected, Source={StaticResource mainViewModel}}"
                                                                  CommandParameter="{Binding ElementName=ServersListView, Path=SelectedItem}"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="200"/>
                                                <ColumnDefinition Width="20"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock x:Name="ServerName" Grid.Column="0" Text="{Binding}" FontSize="20" Foreground="DarkCyan" VerticalAlignment="Center" Padding="14,0,0,0"/>
                                            <TextBlock x:Name="Splitter" Grid.Column="1" Text=" - " FontSize="20" VerticalAlignment="Center"/>
                                            <TextBlock x:Name="ProviderName" Grid.Column="2" Text="Net Holding DDC" FontSize="20" TextAlignment="Left" VerticalAlignment="Center" Padding="10,0,0,0"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </ScrollViewer>
                    </Grid>
                    
                </RelativePanel>
            </Grid>

        </Grid>
    </Grid>
</Page>
