<Page
    x:Class="SpeedTest.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SpeedTest"
    xmlns:vm="using:SpeedTest.ViewModel" 
    xmlns:arcControl="using:SpeedTest.ArcControl"
    xmlns:converter="using:SpeedTest.ViewModel.Converters"
    xmlns:speedDate="using:SpeedTest.ViewModel.HelpfullCollections"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"   
    mc:Ignorable="d">

    <Page.DataContext>
        <StaticResource ResourceKey="mainViewModel"/>
    </Page.DataContext>
    
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/MainPageStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary Source="Styles/LightTheme" x:Key="Light"/>
                <ResourceDictionary Source="Styles/DarkTheme" x:Key="Dark"/>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid RequestedTheme="{Binding Settings.Theme, Source={StaticResource mainViewModel}}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="StateGroup">
                <!-- Desktop version -->
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" MinWindowHeight="860"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Collapsed"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="36"/>
                        <Setter Target="historyButton.(FontSize)" Value="36"/>
                        <Setter Target="backButton.(FontSize)" Value="36"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="150,0,150,380"/>
                        <Setter Target="StartArc.(Radius)" Value="170"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="200"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="180"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="200"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="180"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="20"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="20"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="120"/>
                        <Setter Target="StartButton.(Width)" Value="200"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,30"/>
                        <Setter Target="StartButton.(FontSize)" Value="90"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,15"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="40"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,15"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="1000"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="3"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,30,0,30"/>

                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,60"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="500"/>
                        <Setter Target="providerName.(Width)" Value="250"/>
                        <Setter Target="providerName.(Height)" Value="50"/>
                        <Setter Target="providerName.(FontSize)" Value="30"/>
                        <Setter Target="ipAdress.(Width)" Value="250"/>
                        <Setter Target="ipAdress.(Height)" Value="50"/>
                        <Setter Target="ipAdress.(FontSize)" Value="30"/>
                        <Setter Target="serverName.(Width)" Value="250"/>
                        <Setter Target="serverName.(Height)" Value="50"/>
                        <Setter Target="serverName.(FontSize)" Value="30"/>
                        <Setter Target="serverLocation.(Width)" Value="250"/>
                        <Setter Target="serverLocation.(Height)" Value="50"/>
                        <Setter Target="serverLocation.(FontSize)" Value="30"/>
                        <Setter Target="changeServerButton.(Width)" Value="250"/>
                        <Setter Target="changeServerButton.(Height)" Value="50"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="28"/>
                        <!-- Test Data Board -->
                        <Setter Target="TestDataBoard.(Width)" Value="1000"/>
                        <Setter Target="TestDataBoard.(Height)" Value="150"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="280"/>
                        <Setter Target="PingText.(FontSize)" Value="40"/>
                        <Setter Target="msText.(FontSize)" Value="40"/>
                        <Setter Target="DataPingText.(FontSize)" Value="80"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="410"/>
                        <Setter Target="DownloadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="80"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="310"/>
                        <Setter Target="UploadText.(FontSize)" Value="40"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="40"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="80"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Margin)" Value="0,50,50,0"/>
                        <Setter Target="SettingsPanel.(Height)" Value="850"/>
                        <Setter Target="SettingsPanel.(Width)" Value="450"/>
                        <Setter Target="SettingsPanel.(HorizontalAlignment)" Value="Right"/>
                        <Setter Target="SettingsPanel.(VerticalAlignment)" Value="Top"/>
                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Height)" Value="700"/> 
                        <Setter Target="HistoryPanel.(Width)" Value="700"/>
                        <Setter Target="HistoryPanelTopBar.(Width)" Value="700"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="HistoryHeader.(Height)" Value="70"/>
                        <Setter Target="HistoryHeader.(Width)" Value="700"/>
                        <Setter Target="HistoryHeader.(Margin)" Value="0,0,0,10"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="550"/>
                        <Setter Target="ServerPanel.(Width)" Value="500"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="450"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="30"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="25"/>
                    </VisualState.Setters>
                </VisualState>
                <!-- 500 X 500 version -->
                <VisualState x:Name="Middle">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" MinWindowHeight="580"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SettingsPanelButtons -->
                        <Setter Target="GamburgerButton.(Visibility)" Value="Collapsed"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Margin)" Value="0,10,10,0"/>
                        <Setter Target="setingsButton.(FontSize)" Value="25"/>
                        <Setter Target="historyButton.(FontSize)" Value="25"/>
                        <Setter Target="backButton.(FontSize)" Value="25"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,30,50,220"/>
                        <Setter Target="StartArc.(Radius)" Value="140"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="160"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="150"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="160"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="150"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="10"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="90"/>
                        <Setter Target="StartButton.(Width)" Value="150"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,15"/>
                        <Setter Target="StartButton.(FontSize)" Value="50"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="25"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Width)" Value="440"/>
                        <Setter Target="SplitLineGrid.(Height)" Value="3"/>
                        <Setter Target="SplitLineGrid.(Margin)" Value="0,10"/>
                        <!-- Test Data Board -->
                        <Setter Target="TestDataBoard.(Width)" Value="440"/>
                        <Setter Target="TestDataBoard.(Height)" Value="70"/>
                        <Setter Target="PingFieldsGrid.(Width)" Value="125"/>
                        <Setter Target="PingText.(FontSize)" Value="18"/>
                        <Setter Target="msText.(FontSize)" Value="18"/>
                        <Setter Target="DataPingText.(FontSize)" Value="40"/>
                        <Setter Target="DownloadSpeedFieldsGrid.(Width)" Value="180.4"/>
                        <Setter Target="DownloadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsText.(FontSize)" Value="18"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="40"/>
                        <Setter Target="UploadSpeedFieldsGrid.(Width)" Value="136.4"/>
                        <Setter Target="UploadText.(FontSize)" Value="18"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="18"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="40"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="MainBottomBoardInformation.(Width)" Value="300"/>
                        <Setter Target="providerName.(Width)" Value="150"/>
                        <Setter Target="providerName.(Height)" Value="30"/>
                        <Setter Target="providerName.(FontSize)" Value="20"/>
                        <Setter Target="ipAdress.(Width)" Value="150"/>
                        <Setter Target="ipAdress.(Height)" Value="30"/>
                        <Setter Target="ipAdress.(FontSize)" Value="20"/>
                        <Setter Target="serverName.(Width)" Value="150"/>
                        <Setter Target="serverName.(Height)" Value="30"/>
                        <Setter Target="serverName.(FontSize)" Value="20"/>
                        <Setter Target="serverLocation.(Width)" Value="150"/>
                        <Setter Target="serverLocation.(Height)" Value="30"/>
                        <Setter Target="serverLocation.(FontSize)" Value="20"/>
                        <Setter Target="changeServerButton.(Width)" Value="150"/>
                        <Setter Target="changeServerButton.(Height)" Value="35"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="18"/>
                        <!-- SettingsPanel -->
                        <Setter Target="SettingsPanel.(Height)" Value="475"/>
                        <Setter Target="SettingsPanel.(Margin)" Value="0,0,25,0"/>
                        <Setter Target="SettingsPanel.(Width)" Value="450"/>
                        <Setter Target="SettingsPanel.(HorizontalAlignment)" Value="Right"/>
                        <Setter Target="SettingsPanel.(VerticalAlignment)" Value="Top"/>
                        <!-- Servers Panel -->
                        <Setter Target="ServerPanel.(Height)" Value="475"/>
                        <Setter Target="ServerPanel.(Width)" Value="425"/>
                        <Setter Target="ServerSuggestBox.(Width)" Value="375"/>
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>
                        <!-- History Panel -->
                        <Setter Target="HistoryPanel.(Height)" Value="480"/>
                        <Setter Target="HistoryPanel.(Width)" Value="480"/>
                        <Setter Target="HistoryPanelTopBar.(Width)" Value="480"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="HistoryHeader.(Height)" Value="70"/>
                        <Setter Target="HistoryHeader.(Width)" Value="480"/>
                        <Setter Target="HistoryHeader.(Margin)" Value="0,0,0,10"/>

                    </VisualState.Setters>
                </VisualState>
                <!-- Phone version -->
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SettingsPanelButtons -->                         
                        <Setter Target="GamburgerButton.(Visibility)" Value="Visible"/>
                        <Setter Target="SettingsPanelButtons.(Visibility)" Value="Collapsed"/>
                        <!-- Arcs -->
                        <Setter Target="ArcGrid.(Margin)" Value="50,30,50,220"/>
                        <Setter Target="StartArc.(Radius)" Value="100"/>
                        <Setter Target="DownloadSpeedArc.(Radius)" Value="120"/>
                        <Setter Target="UploadSpeedArc.(Radius)" Value="110"/>
                        <Setter Target="TryConnectArc1.(Radius)" Value="120"/>
                        <Setter Target="TryConnectArc2.(Radius)" Value="110"/>
                        <Setter Target="DownloadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="UploadSpeedArc.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc1.(Thickness)" Value="10"/>
                        <Setter Target="TryConnectArc2.(Thickness)" Value="10"/>
                        <!-- StartButton -->
                        <Setter Target="StartButton.(Height)" Value="90"/>
                        <Setter Target="StartButton.(Width)" Value="150"/>
                        <Setter Target="StartButton.(Margin)" Value="0,0,0,15"/>
                        <Setter Target="StartButton.(FontSize)" Value="50"/>
                        <!-- TryConnectTextBlock -->
                        <Setter Target="TryConnectTextBlock.(FontSize)" Value="25"/>
                        <Setter Target="TryConnectTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- SpeedDataNumbersTextBlock -->
                        <Setter Target="SpeedDataNumbersTextBlock.(FontSize)" Value="30"/>
                        <Setter Target="SpeedDataNumbersTextBlock.(Margin)" Value="0,0,0,10"/>
                        <!-- Test Data Board -->
                        <Setter Target="TestDataBoard.(Margin)" Value="20,0,20,0"/>
                        <Setter Target="PingText.(FontSize)" Value="15"/>
                        <Setter Target="msText.(FontSize)" Value="15"/>
                        <Setter Target="DataPingText.(FontSize)" Value="30"/>
                        <Setter Target="DownloadText.(FontSize)" Value="15"/>
                        <Setter Target="mbpsText.(FontSize)" Value="15"/>
                        <Setter Target="DownloadSpeedData.(FontSize)" Value="30"/>
                        <Setter Target="UploadText.(FontSize)" Value="15"/>
                        <Setter Target="mbpsUploadText.(FontSize)" Value="15"/>
                        <Setter Target="UploadDataText.(FontSize)" Value="30"/>
                        <!-- SplitLine -->
                        <Setter Target="SplitLineGrid.(Margin)" Value="20,20,20,20"/>
                        <!-- Main Bottom Board -->
                        <Setter Target="BottomBoard.(Margin)" Value="0,0,0,20"/>
                        <Setter Target="MainBottomBoardInformation.(Margin)" Value="20,0"/>
                        <Setter Target="providerName.(FontSize)" Value="20"/>
                        <Setter Target="serverName.(FontSize)" Value="20"/>
                        <Setter Target="serverLocation.(FontSize)" Value="20"/>
                        <Setter Target="ipAdress.(FontSize)" Value="20"/>
                        <Setter Target="changeServerButton.(Margin)" Value="0,20,0,0"/>
                        <Setter Target="changeServerButton.(FontSize)" Value="18"/>
                        <Setter Target="changeServerButton.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="changeServerButton.(HorizontalAlignment)" Value="Stretch"/>
                        <!-- SettingsPanel -->

                        <!-- History Panel -->
                        <Setter Target="HistoryHeader.(Visibility)" Value="Collapsed"/>
                        <Setter Target="HistoryBlock.(FontSize)" Value="30"/>
                        <Setter Target="HistoryBlock.(Padding)" Value="30,10"/>
                        <Setter Target="DeleteHistoryButton.(Height)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(Width)" Value="60"/>
                        <Setter Target="DeleteHistoryButton.(FontSize)" Value="30"/>
                        <Setter Target="CloseHistoryButton.(Height)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(Width)" Value="60"/>
                        <Setter Target="CloseHistoryButton.(FontSize)" Value="30"/>
                        <!-- Servers Panel -->
                        <Setter Target="HeaderServerName.(FontSize)" Value="25"/>
                        <Setter Target="HeaderServerLocation.(FontSize)" Value="20"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <!-- Background Image with Grid Above It -->
        <Image Source="Assets/white-abstract-style-background-vector.jpg" Stretch="Fill"/>
        <Grid Background="{ThemeResource BackgroundOpacityBrushForPhoto}"/>

        <!-- Main Grid -->
        <Grid x:Name="MainGrid">

            <!-- Main Panel Buttons -->
            <StackPanel x:Name="SettingsPanelButtons" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button x:Name="setingsButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE713;" Margin="10"
                        Command="{Binding SettingsButtonPressed, Source={StaticResource mainViewModel}}"/>
                <Button x:Name="historyButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE81C;" Margin="10"
                        Command="{Binding HistoryButtonPressed, Source={StaticResource mainViewModel}}"/>
                <Button x:Name="backButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE72D;" Margin="10"
                        Command="{Binding BackButtonPressed, Source={StaticResource mainViewModel}}"/>
            </StackPanel>
            
            <!-- Phone Gamburger Button (Settings inner) -->
            <Button x:Name="GamburgerButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE700;" Margin="10"
                    HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20"
                    Command="{Binding GamburgerButtonPressed, Source={StaticResource mainViewModel}}"/>

            <!-- Arc Board -->
            <Grid x:Name="ArcGrid" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,50,0,0">

                <!-- Arc Controls -->
                <arcControl:Arc x:Name="StartArc" Fill="DarkCyan" Thickness="3" PercentValue="400" EnableGradient="False" 
                                Visibility="{Binding IsStartButtonPressed, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Reverse, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="TryConnectArc1" Fill="Gray" PercentValue="400" Opacity="0.4" EnableGradient="False" 
                                Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="TryConnectArc2" Fill="Gray" PercentValue="400" Opacity="0.2" EnableGradient="False"
                                Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="DownloadSpeedArc" Fill="DarkCyan" PercentValue="215"
                                Visibility="{Binding IsDownloadSpeedDataRecieved, Source={StaticResource mainViewModel}}"/>
                <arcControl:Arc x:Name="UploadSpeedArc" Fill="DarkBlue" PercentValue="97"
                                Visibility="{Binding IsUploadSpeedDataRecieved, Source={StaticResource mainViewModel}}"/>

                <!-- Start Button and SpeedDataNumbersTextBlock and TryConnectTextBlock-->
                <Button x:Name="StartButton" Style="{StaticResource ButtonStyle}" Canvas.ZIndex="1" Content="Start" HorizontalAlignment="Center"
                        Visibility="{Binding IsStartButtonPressed, Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter=Reverse, Source={StaticResource mainViewModel}}"
                        Command="{Binding StartButtonPressed, Source={StaticResource mainViewModel}}"/>

                <TextBlock x:Name="TryConnectTextBlock" Text="Connecting..." HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding TryConnect, Source={StaticResource mainViewModel}}"  />            

                <TextBlock x:Name="SpeedDataNumbersTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Visibility="{Binding IsSpeedDataNumbersReceiving, Source={StaticResource mainViewModel}}"              
                   Text="{Binding SpeedDataNumbers, Source={StaticResource mainViewModel}}"/>

            </Grid>

            <!-- Bottom Board -->
            <StackPanel x:Name="BottomBoard" Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom">

                <!-- Test Data Board -->
                <Grid x:Name="TestDataBoard" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" >
                    <RelativePanel>

                        <!-- Ping Fields -->
                        <Grid x:Name="PingFieldsGrid" Visibility="Visible" RelativePanel.AlignLeftWithPanel="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="PingText" Grid.Column="0" Text="Ping" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="msText" Grid.Column="0" Grid.Row="1" Text="(ms)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" />
                            <TextBlock x:Name="DataPingText" Grid.Column="1" Grid.RowSpan="2" Text="163" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>

                        <!-- Download Speed Fields -->
                        <Grid x:Name="DownloadSpeedFieldsGrid" Visibility="Visible" RelativePanel.RightOf="PingFieldsGrid" RelativePanel.LeftOf="UploadSpeedFieldsGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="DownloadText" Grid.Column="0" Text="Download" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                            <TextBlock x:Name="mbpsText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                            <TextBlock x:Name="DownloadSpeedData" Grid.Column="1" Grid.RowSpan="2" Text="121" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </Grid>

                        <!-- Upload Speed Fields -->
                        <Grid x:Name="UploadSpeedFieldsGrid" Visibility="Visible"  RelativePanel.AlignRightWithPanel="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="UploadText" Grid.Column="0" Text="Upload" Style="{StaticResource TextBlockTextDataBoardFeature}" VerticalAlignment="Bottom"/>
                            <TextBlock x:Name="mbpsUploadText" Grid.Column="0" Grid.Row="1" Text="(mbps)" Style="{StaticResource TextBlockTextDataBoardMetrics}" VerticalAlignment="Top" />
                            <TextBlock x:Name="UploadDataText" Grid.Column="1" Grid.RowSpan="2" Text="111" Style="{StaticResource TextBlockTextDataBoardDataNumbers}" VerticalAlignment="Center" />
                        </Grid>

                    </RelativePanel>
                </Grid>

                <!-- Split Line -->
                <Grid x:Name="SplitLineGrid">
                    <RelativePanel>
                        <Rectangle x:Name="SplitLine" Fill="{StaticResource LinearGradientBrush}" Stretch="Fill"
                                   Height="3" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                    </RelativePanel>
                </Grid>

                <!-- Main Bottom Board Information -->
                <RelativePanel x:Name="MainBottomBoardInformation" Grid.Column="1" Grid.Row="1">
                    <TextBlock x:Name="providerName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan"
                               Text="{Binding ProviderName}" RelativePanel.AlignLeftWithPanel="True"/>
                    <TextBlock x:Name="ipAdress" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding IpAdress}" RelativePanel.Below="providerName"/>
                    <TextBlock x:Name="serverName" Style="{StaticResource TextBlockBottomBoard}" Foreground="DarkCyan" 
                               Text="{Binding ServerName, Source={StaticResource mainViewModel}}" RelativePanel.AlignRightWithPanel="True"/>
                    <TextBlock x:Name="serverLocation" Style="{StaticResource TextBlockBottomBoard}"
                               Text="{Binding ServerLocation, Source={StaticResource mainViewModel}}"
                               RelativePanel.Below="serverName" RelativePanel.AlignRightWithPanel="True"/>
                    <Button x:Name="changeServerButton" Style="{StaticResource ButtonBottomBoard}" Content="Change server" 
                            RelativePanel.Below="serverLocation" RelativePanel.AlignRightWithPanel="True"
                            Command="{Binding ChangeServerButtonPressed}">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0.6,0">
                                <GradientStop Color="#FF14CEEC" Offset="1"/>
                                <GradientStop Color="#FF101757" Offset="0"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>
                </RelativePanel>

            </StackPanel>

        </Grid>
        
        <!-- Popup Grid with Helpful Panels -->       
        <Grid x:Name="PopupGrid" Canvas.ZIndex="1" 
              Visibility="{Binding IsPopupGridRaise, Source={StaticResource mainViewModel},Converter={StaticResource BooleanToVisibilityConverter}}"
              Background="{ThemeResource BackgroundPopupGrid}">
            
            <!-- Settings Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Visibility="{Binding IsSettingsPaneOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}">

                <RelativePanel x:Name="SettingsPanel" Style="{StaticResource Border}" >

                    <!-- Settings Panel TopBar -->
                    <RelativePanel x:Name="SettingsTopBar" Background="{ThemeResource BackgroundPanelTitle}" IsHoldingEnabled="True"
                                   RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True">
                        <TextBlock x:Name="SettingsBlock" Text="Settings" FontSize="30" Foreground="DarkCyan" Padding="20,10"
                                       RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="CloseSettingButton" Style="{StaticResource ButtonClose}" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"
                                Command="{Binding SettingSplitViewClosing, Source={StaticResource mainViewModel}}"/>
                    </RelativePanel>

                    <!-- Shade -->
                    <Rectangle Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="SettingsTopBar" Opacity="0.3" Canvas.ZIndex="1" 
                               Height="10" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>

                    <!-- Settings Panel Main Container -->
                    <Grid Background="{ThemeResource BackgroundPanelContent}" RelativePanel.Below="SettingsTopBar">
                        <ScrollViewer x:Name="ScrollForSettings">

                            <RelativePanel x:Name="ContentPanel" Padding="20,10,0,0">

                                <!-- Language Block -->
                                <TextBlock x:Name="LanguageBlock" Text="Language" FontSize="20" Padding="0,10"/>
                                <ComboBox x:Name="LanguageComboBox" Style="{StaticResource ComboBoxStyle1}" ItemsSource="{Binding Settings.Languages, Source={StaticResource mainViewModel}}" 
                                          Margin="0,0,20,0" PlaceholderText="English" FlowDirection="LeftToRight" HorizontalAlignment="Stretch"
                                          RelativePanel.Below="LanguageBlock" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                                    
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                                            <Core:InvokeCommandAction Command="{Binding LanguageComboBoxChanged}" 
                                                                      CommandParameter="{Binding ElementName=LanguageComboBox,Path=SelectedItem}"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    
                                </ComboBox>

                                <!-- Mode Block -->
                                <TextBlock x:Name="ModeBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" Text="Mode" RelativePanel.Below="LanguageComboBox"/>
                                <RadioButton Style="{StaticResource RadioButtonStyle1}" x:Name="LightRadioButton" GroupName="Theme"  Content="Light" Width="90" RelativePanel.Below="ModeBlock"
                                                 Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=LightRadioButton,Path=Content}" 
                                                 IsChecked="{Binding SelectedMode, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 0}"/>
                                <RadioButton Style="{StaticResource RadioButtonStyle1}" x:Name="DarkRadioButton" GroupName="Theme" Content="Dark" Width="90" RelativePanel.Below="LightRadioButton"
                                                 Command="{Binding SelectedItemRadioButtonChanged}" CommandParameter="{Binding ElementName=DarkRadioButton,Path=Content}" 
                                                 IsChecked="{Binding SelectedMode, Converter={StaticResource RadioModeSelectedIntToBooltConverter}, ConverterParameter = 1}"/>

                                <!--About Block -->
                                <TextBlock x:Name="AboutBlock" Style="{StaticResource TextBlockSettingsPanelTitle}" Text="About" RelativePanel.Below="DarkRadioButton"/>
                                <TextBlock x:Name="ProgramNameBlock" Text="{Binding Settings.ProgramName}" Style="{StaticResource TextBlockAboutProgram}"
                                               RelativePanel.Below="AboutBlock"/>
                                <TextBlock x:Name="VersionBlock" Text="{Binding Settings.Version}" Style="{StaticResource TextBlockAboutProgram}" 
                                               RelativePanel.Below="ProgramNameBlock"/>
                                <TextBlock x:Name="MicrosoftResearchBlock" Text="Microsoft Research" Style="{StaticResource TextBlockAboutProgram}"  
                                               TextAlignment="Right" RelativePanel.Below="VersionBlock"/>
                                <RichTextBlock x:Name="AboutStoryBlock" Margin="0,30,20,30" RelativePanel.Below="MicrosoftResearchBlock">
                                    <Paragraph>
                                        <Run Text="{Binding Settings.AboutArticle}"/>
                                    </Paragraph>
                                </RichTextBlock>

                                <!--FeedBack Block -->
                                <HyperlinkButton x:Name="FeedBackLink" NavigateUri="{Binding Settings.FeedBackLink}" Style="{StaticResource HyperlinkButtonSettingsPanel}" 
                                                 RelativePanel.Below="AboutStoryBlock">Feedback</HyperlinkButton>
                                <HyperlinkButton x:Name="RateLink" NavigateUri="{Binding Settings.RateLink}" Style="{StaticResource HyperlinkButtonSettingsPanel}"
                                                 Margin="0,0,0,30" RelativePanel.Below="FeedBackLink">Rate us</HyperlinkButton>
                            </RelativePanel>
                        </ScrollViewer>
                    </Grid>

                </RelativePanel>
            </Grid>

            <!-- History Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel x:Name="HistoryPanel" Style="{StaticResource Border}" Background="{ThemeResource BackgroundPanelContent}"
                               Visibility="{Binding IsHistoryPanelOpen,Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter} }">

                    <!-- History Panel TopBar -->
                    <RelativePanel x:Name="HistoryPanelTopBar" Background="{ThemeResource BackgroundPanelTitle}" IsHoldingEnabled="True"
                                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                        
                        <TextBlock x:Name="HistoryBlock" Text="History" Foreground="DarkCyan" RelativePanel.AlignLeftWithPanel="True"/>
                        <Button x:Name="DeleteHistoryButton" Command="{Binding DeleteHistoryButtonPressed}" Background="Transparent" 
                                Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE74D;" RelativePanel.RightOf="HistoryBlock"/>
                        <Button x:Name="CloseHistoryButton" Command="{Binding CloseHistoryButtonPressed}" Background="Transparent"
                                Foreground="DarkCyan" FontFamily="Segoe MDL2 Assets" Content="&#xE711;" RelativePanel.AlignRightWithPanel="True"/>
                    
                    </RelativePanel>
                    
                    <!-- Shade -->
                    <Rectangle Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="HistoryPanelTopBar" Opacity="0.3" Canvas.ZIndex="1" 
                               Height="10" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>

                    <!-- History Header -->
                    <Grid x:Name="HistoryHeader" RelativePanel.Below="HistoryPanelTopBar" RelativePanel.AlignRightWithPanel="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.4*"/>
                            <ColumnDefinition Width="1.5*"/>
                            <ColumnDefinition Width="1.2*"/>
                            <ColumnDefinition Width="0.6*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="0.8*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="CommonStyleSetterTextBlock"/>
                        
                        <TextBlock Grid.Column="1" Text="Server" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="2" Text="Date" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="3" Text="Ping" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="4" Text="Download" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="5" Text="Upload" Style="{StaticResource TextBlockHistoryPanelGridViewHeader}"/>
                        <TextBlock Grid.Column="3" Text="(Ms)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock Grid.Column="4" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                        <TextBlock Grid.Column="5" Text="(Mbps)" Style="{StaticResource TextBlockHistoryPanelGridViewHeaderMetrics}"/>
                    </Grid>
                   
                    <!-- History List -->
                    <Grid x:Name="HistoryCollectionGrid" RelativePanel.Below="HistoryHeader" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                          RelativePanel.AlignBottomWithPanel="True">
                        <GridView x:Name="HistoryGrid" ItemsSource="{Binding SpeedDataCollection}" ItemContainerStyle="{StaticResource GridViewItemContainerStyle1}" 
                                  ItemsPanel="{StaticResource MyItemsPanelTemplate}" IsItemClickEnabled="True" SelectionMode="Single" HorizontalContentAlignment="Stretch">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="SelectionChanged">
                                    <Core:InvokeCommandAction Command="{Binding SingleHistorySelected, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <GridView.ItemTemplate>
                                <DataTemplate>
                                    <UserControl HorizontalContentAlignment="Stretch">
                                        <Grid x:Name="VisualStateGrid" HorizontalAlignment="Stretch">
                                            <!-- Adaptive Styles For GridViewItems -->
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup>
                                                    <VisualState x:Name="Desktop">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="1000" MinWindowHeight="830"/>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Height)" Value="50"/>
                                                            <Setter Target="HistoryItemGrid.(Width)" Value="700"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(Width)" Value="50"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(FontSize)" Value="20"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Collapsed"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Middle">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="500"/>
                                                        </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Height)" Value="50"/>
                                                            <Setter Target="HistoryItemGrid.(Width)" Value="480"/>
                                                            <Setter Target="SingleHistoryRemoveButton.(Width)" Value="35"/>
                                                         <Setter Target="SingleHistoryRemoveButton.(FontSize)" Value="17"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Collapsed"/>
                                                         </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="Phone">
                                                        <VisualState.StateTriggers>
                                                            <AdaptiveTrigger MinWindowWidth="0"/>
                                                             </VisualState.StateTriggers>
                                                        <VisualState.Setters>
                                                            <Setter Target="HistoryItemGrid.(Visibility)" Value="Collapsed"/>
                                                            <Setter Target="PhoneGrid.(Visibility)" Value="Visible"/>
                                                        </VisualState.Setters>
                                                     </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <!-- Phone GridViewItem Template -->
                                            <Grid x:Name="PhoneGrid">
                                                <RelativePanel x:Name="SingleHistoryCell">
                                                    <!-- Shade -->
                                                    <Rectangle x:Name="PhoneShadeUp" Fill="{StaticResource LinearGradientBrushShade}"  Opacity="0.3" Canvas.ZIndex="1" 
                                                                Height="4" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                                                    
                                                    <!-- Phone Single History Top Bar -->
                                                    <RelativePanel x:Name="CellHeader" Background="{ThemeResource BackgroundPanelTitle}" 
                                                                   RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                                                        <TextBlock x:Name="DateTextBlockPhoneGrid" RelativePanel.AlignLeftWithPanel="True" Padding="20,10,0,10"
                                                                   Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"/>
                                                        <Button x:Name="SingleHistoryDeletingButtonPhoneGrid" Content="Delete" Margin="0,0,10,0" Height="40" 
                                                                Background="Transparent" Foreground="DarkCyan" RelativePanel.AlignRightWithPanel="True">

                                                            <Interactivity:Interaction.Behaviors>
                                                                <Core:EventTriggerBehavior EventName="Click">
                                                                    <Core:InvokeCommandAction Command="{Binding PhoneSingleHistoryDeletedButtonPressed, Source={StaticResource mainViewModel}}"/>
                                                                </Core:EventTriggerBehavior>
                                                            </Interactivity:Interaction.Behaviors>

                                                        </Button>
                                                    </RelativePanel>
                                                    
                                                    <!-- Shade -->
                                                    <Rectangle x:Name="PhoneShadeDown" Fill="{StaticResource LinearGradientBrushShade}" RelativePanel.Below="CellHeader" Opacity="0.3" Canvas.ZIndex="1" 
                                                                Height="8" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"/>
                                                    <!-- Main Content of ItemTemplate -->
                                                    <RelativePanel x:Name="CellContent" RelativePanel.Below="CellHeader" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                                                        <TextBlock x:Name="PhoneServerTextBlock" Text="Server" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.AlignLeftWithPanel="True"/>
                                                        <TextBlock x:Name="PhonePingTextBlock" Text="Ping" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhoneServerTextBlock"/>
                                                        <TextBlock x:Name="PhoneMsTextBlock" Text="(Ms)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhonePingTextBlock" RelativePanel.Below="PhoneServerTextBlock"/>
                                                        <TextBlock x:Name="PhoneDownloadTextBlock" Text="Dowload" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhonePingTextBlock"/>
                                                        <TextBlock x:Name="PhoneDownloadMbpsTextBlock" Text="(Mbps)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhoneDownloadTextBlock" RelativePanel.Below="PhonePingTextBlock"/>
                                                        <TextBlock x:Name="PhoneUploadTextBlock" Text="Upload" Foreground="DarkCyan" Padding="20,10,0,10" RelativePanel.Below="PhoneDownloadTextBlock"/>
                                                        <TextBlock x:Name="PhoneUploadMbpsTextBlock" Text="(Mbps)" Foreground="Gray" Padding="20,10,0,10" RelativePanel.RightOf="PhoneDownloadTextBlock" RelativePanel.Below="PhoneDownloadTextBlock"/>

                                                        <TextBlock x:Name="PhoneServerDataTextBlock" Text="{Binding Server}" Padding="20,10,20,10" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhonePingDataTextBlock" Text="{Binding Ping}" Padding="20,10,20,10" RelativePanel.Below="PhoneServerDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhoneDownloadSpeedDataTextBlock" Text="{Binding DownloadSpeed}" Padding="20,10,20,10" RelativePanel.Below="PhonePingDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                        <TextBlock x:Name="PhoneUploadSpeedDataTextBlock" Text="{Binding UploadSpeed}" Padding="20,10,20,10" RelativePanel.Below="PhoneDownloadSpeedDataTextBlock" RelativePanel.AlignRightWithPanel="True"/>
                                                    </RelativePanel>
                                                    
                                                </RelativePanel>
                                            </Grid>
                                            
                                            <!-- Common GridViewItem Template -->
                                            <Grid x:Name="HistoryItemGrid">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="0.4*"/>
                                                    <ColumnDefinition Width="1.5*"/>
                                                    <ColumnDefinition Width="1.2*"/>
                                                     <ColumnDefinition Width="0.6*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="0.8*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <Button x:Name="SingleHistoryRemoveButton" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                                        Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}"
                                                         Height="50" FontFamily="Segoe MDL2 Assets" Content="&#xE711;">

                                                    <Interactivity:Interaction.Behaviors>
                                                        <Core:EventTriggerBehavior EventName="Click">
                                                            <Core:InvokeCommandAction Command="{Binding SingleHistoryDeletedButtonPressed, Source={StaticResource mainViewModel}}"
                                                                                  CommandParameter="{Binding ElementName=HistoryGrid, Path=SelectedItem}"/>
                                                        </Core:EventTriggerBehavior>
                                                    </Interactivity:Interaction.Behaviors>
                                                    
                                                 </Button>
                                                <Grid Grid.Column="1" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                    <TextBlock x:Name="ServerTextBlock" Text="{Binding Server}" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"/>
                                                 </Grid>
                                                <Grid Grid.Column="2" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                    <TextBlock x:Name="DateTextBlock" Grid.Column="2" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"/>
                                                </Grid>
                                                <Grid Grid.Column="3" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                    <TextBlock x:Name="PingTextBlock" Grid.Column="3" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding Ping}"/>
                                                </Grid>
                                                <Grid Grid.Column="4" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                    <TextBlock x:Name="DownloadSpeedTextBlock" Grid.Column="4" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding DownloadSpeed}"/>
                                                </Grid>
                                                <Grid Grid.Column="5" Background="{Binding IsSelected, Converter={StaticResource BooleanToColorConverter}}">
                                                    <TextBlock x:Name="UploadSpeedTextBlock" Grid.Column="5" Style="{StaticResource TextBlockHistoryPanelGridViewItem}"
                                                           Text="{Binding UploadSpeed}"/>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </UserControl>
                                </DataTemplate>
                            </GridView.ItemTemplate>
                        </GridView>
                    </Grid>
                </RelativePanel>
            </Grid>
            
            <!-- Servers Panel -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <RelativePanel x:Name="ServerPanel" Style="{StaticResource Border}" Background="{ThemeResource BackgroundPanelContent}"
                               Visibility="{Binding IsServerPanelOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                    
                    <!-- TopBar -->
                    <RelativePanel x:Name="ServersTopBar" IsHoldingEnabled="True" Margin="20,20" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        <TextBlock x:Name="ImageGlobe" Text="&#xE774;" FontSize="40" Foreground="DarkCyan"  TextAlignment="Right" Padding="0,10,10,0"
                                       FontFamily="Segoe MDL2 Assets" RelativePanel.AlignLeftWithPanel="True"/>
                        <Rectangle Fill="DarkCyan"  Canvas.ZIndex="1" RelativePanel.RightOf="ImageGlobe"
                               Width="2" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"/>
                        <TextBlock x:Name="HeaderServerName" Text="{Binding ServerName, Source={StaticResource mainViewModel}}" Foreground="DarkCyan" Padding="10,0,0,0"
                                   RelativePanel.RightOf="ImageGlobe" VerticalAlignment="Top"/>
                        <TextBlock x:Name="HeaderServerLocation" Text="{Binding ServerLocation, Source={StaticResource mainViewModel}}" Padding="10,0,0,0"
                                   RelativePanel.RightOf="ImageGlobe" RelativePanel.Below="HeaderServerName"/>
                        <Button x:Name="CloseServersPanelButton" Style="{StaticResource ButtonClose}"  Content="&#xE711;"
                                Command="{Binding CloseServerPanelButtonPressed}" RelativePanel.AlignRightWithPanel="True"/>
                    </RelativePanel>
                    
                    <!-- Search Bar -->
                    <AutoSuggestBox x:Name="ServerSuggestBox" Style="{StaticResource AutoSuggestBoxStyle1}" PlaceholderText="Search" Margin="20,0" QueryIcon="Find" 
                                    RelativePanel.Below="ServersTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="TextChanged">
                                <Core:InvokeCommandAction Command="{Binding ServerSuggestBoxTextChanged, Source={StaticResource mainViewModel}}"
                                                          CommandParameter="{Binding ElementName=ServerSuggestBox, Path=Text}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </AutoSuggestBox>

                    <!-- AvailableServers Line -->
                    <TextBlock x:Name="AvailableServers" Text="Available servers:" FontSize="20" Margin="20,10,0,10" RelativePanel.Below="ServerSuggestBox"/>

                    <!-- Servers List -->
                    <Grid RelativePanel.Below="AvailableServers" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignBottomWithPanel="True">
                        <ListView x:Name="ServersListView" ItemsSource="{Binding ServerNamesCollection, Source={StaticResource mainViewModel}}" 
                                  ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}" Margin="20,0,20,0" ItemsPanel="{StaticResource MyItemsPanelTemplate}"
                                  RelativePanel.Below="AvailableServers">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="SelectionChanged">
                                    <Core:InvokeCommandAction Command="{Binding SingleServerSelected, Source={StaticResource mainViewModel}}"
                                                              CommandParameter="{Binding ElementName=ServersListView, Path=SelectedItem}"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>

                            <ListView.ItemTemplate>
                                <DataTemplate>

                                    <RelativePanel>
                                        <TextBlock x:Name="ServerName" Grid.Column="0" Text="{Binding}" FontSize="20" Foreground="DarkCyan" RelativePanel.AlignLeftWithPanel="True" RelativePanel.LeftOf="ProviderName"/>
                                        <TextBlock x:Name="ProviderName" Grid.Column="1" Text=" - Net Holding DDC" FontSize="20" RelativePanel.AlignRightWithPanel="True"/>
                                    </RelativePanel>

                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                    
                </RelativePanel>
            </Grid>
            
            <!-- Phone Main Panel Buttons -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Visibility="{Binding IsPhoneMainPanelOpen, Source={StaticResource mainViewModel}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <RelativePanel>

                    <RelativePanel x:Name="PhoneMainPanelTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                        
                        <Button x:Name="PopupGamburgerButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE700;" Margin="10"
                                HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20"
                                Command="{Binding GamburgerButtonPressed, Source={StaticResource mainViewModel}}"/>
                        
                    </RelativePanel>

                    <RelativePanel x:Name="PhoneMainPanelContentBar" RelativePanel.AlignBottomWithPanel="True"
                                   RelativePanel.Below="PhoneMainPanelTopBar" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">

                        
                            <Button x:Name="PhoneSetingsButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE713;" Margin="10" FontSize="20"
                                    RelativePanel.AlignBottomWithPanel="True"
                                    Command="{Binding SettingsButtonPressed, Source={StaticResource mainViewModel}}"/>
                            <Button x:Name="PhoneHistoryButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE81C;" Margin="10" FontSize="20"
                                     Command="{Binding HistoryButtonPressed, Source={StaticResource mainViewModel}}"/>
                            <Button x:Name="PhoneBackButton" Style="{StaticResource SettingsPanelButton}" Content="&#xE72D;" Margin="10" FontSize="20"
                                    RelativePanel.Above="PhoneSetingsButton"
                                    Command="{Binding BackButtonPressed, Source={StaticResource mainViewModel}}"/>
                        
                    </RelativePanel>

                </RelativePanel>
            </Grid>
            
        </Grid>
    </Grid>
</Page>
