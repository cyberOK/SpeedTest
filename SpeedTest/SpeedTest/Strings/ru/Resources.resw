<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutBlockText" xml:space="preserve">
    <value>Немного о нас</value>
  </data>
  <data name="AvailableServersText" xml:space="preserve">
    <value>Доступные сервера:</value>
  </data>
  <data name="changeServerButtonContent" xml:space="preserve">
    <value>Поменять сервер</value>
  </data>
  <data name="DarkRadioButtonContent" xml:space="preserve">
    <value>Тёмная</value>
  </data>
  <data name="DateTextBlock" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="DownloadText" xml:space="preserve">
    <value>Загрузка</value>
  </data>
  <data name="DownloadTextBlock" xml:space="preserve">
    <value>Загрузка</value>
  </data>
  <data name="FeedBackLinkContent" xml:space="preserve">
    <value>Оставить отзыв</value>
  </data>
  <data name="HistoryBlockText" xml:space="preserve">
    <value>История</value>
  </data>
  <data name="LanguageBlockText" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="LanguageComboBoxPlaceholderText" xml:space="preserve">
    <value>Выберите язык</value>
  </data>
  <data name="LightRadioButtonContent" xml:space="preserve">
    <value>Светлая</value>
  </data>
  <data name="mbpsText" xml:space="preserve">
    <value>(мб/с)</value>
  </data>
  <data name="MbpsTextBlock" xml:space="preserve">
    <value>(Мб/с)</value>
  </data>
  <data name="ModeBlockText" xml:space="preserve">
    <value>Режим</value>
  </data>
  <data name="msText" xml:space="preserve">
    <value>(м/с)</value>
  </data>
  <data name="MsTextBlock" xml:space="preserve">
    <value>(М/с)</value>
  </data>
  <data name="PhoneDownloadMbpsTextBlock" xml:space="preserve">
    <value>(Мб/с)</value>
  </data>
  <data name="PhoneDownloadTextBlock" xml:space="preserve">
    <value>Загрузка</value>
  </data>
  <data name="PhoneHistoryTextBlock" xml:space="preserve">
    <value>История</value>
  </data>
  <data name="PhoneMsTextBlock" xml:space="preserve">
    <value>(М/с)</value>
  </data>
  <data name="PhonePingTextBlock" xml:space="preserve">
    <value>Пинг</value>
  </data>
  <data name="PhoneServerTextBlock" xml:space="preserve">
    <value>Сервер</value>
  </data>
  <data name="PhoneSetingsTextBlock" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="PhoneShareTextBlock" xml:space="preserve">
    <value>Поделиться</value>
  </data>
  <data name="PhoneUploadMbpsTextBlock" xml:space="preserve">
    <value>(Мб/с)</value>
  </data>
  <data name="PhoneUploadTextBlock" xml:space="preserve">
    <value>Выгрузка</value>
  </data>
  <data name="PingText" xml:space="preserve">
    <value>Пинг</value>
  </data>
  <data name="PingTextBlock" xml:space="preserve">
    <value>Пинг</value>
  </data>
  <data name="RateLinkContent" xml:space="preserve">
    <value>Оцените нас</value>
  </data>
  <data name="ServerSuggestBoxPlaceholderText" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="ServerTextBlock" xml:space="preserve">
    <value>Сервер</value>
  </data>
  <data name="SettingsHeader" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="SingleHistoryDeletingButtonPhoneGridContent" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="StartButtonContent" xml:space="preserve">
    <value>Старт</value>
  </data>
  <data name="TryConnectTextBlock" xml:space="preserve">
    <value>Соединение...</value>
  </data>
  <data name="UploadText" xml:space="preserve">
    <value>Выгрузка</value>
  </data>
  <data name="UploadTextBlock" xml:space="preserve">
    <value>Выгрузка</value>
  </data>
  <data name="DeleteDialogContent" xml:space="preserve">
    <value>Вы действительно хотите очистить историю? Для продолжения нажмите "Очистить историю", это может занять некоторое время.</value>
  </data>
  <data name="DeleteDialogPrimaryButtonText" xml:space="preserve">
    <value>Очистить историю</value>
  </data>
  <data name="DeleteDialogSecondaryButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="DeleteDialogTitle" xml:space="preserve">
    <value>Очистить историю приложения?</value>
  </data>
  <data name="DefaultRadioButtonContent" xml:space="preserve">
    <value>По умолчанию</value>
  </data>
  <data name="AboutArticleText" xml:space="preserve">
    <value>Кроме того, поскольку мы явно отделили стиль, который отслеживает ListBoxItem, а не помещаем его в строку, опять же, как показали другие примеры, теперь вы можете создать новый стиль для него, чтобы настраивать элементы для каждого элемента, такие как интервал. (Это не будет работать, если вы просто попытаетесь настроить таргетинг на ListBoxItem, так как стиль с ключом переопределяет общие целевые элементы управления.) Кроме того, поскольку мы явно отделили стиль, который отслеживает ListBoxItem, а не помещаем его в строку, получите, как показали другие примеры, Теперь можно создать новый стиль для него, чтобы настроить вещи для каждого элемента, такие как интервал. (Это не будет работать, если вы просто попытаетесь настроить таргетинг на ListBoxItem, так как стиль ключа переопределяет общие цели управления.) Снова, как показали другие примеры, теперь вы можете создать новый стиль для него, чтобы настраивать вещи для каждого элемента, например as spacing. (Это не сработает, если вы просто попытаетесь настроить таргетинг на ListBoxItem, поскольку стиль с ключом переопределяет общие цели управления.) Кроме того, поскольку мы явно выделяем стиль, который отслеживает ListBoxItem, а не помещает его в строку, получим усиление, как в других примерах. показано, что теперь вы можете создать новый стиль для него, чтобы настроить вещи для каждого элемента, такие как интервалы (это не будет работать, если вы просто попытаетесь нацелиться на ListBoxItem, так как стиль с ключом переопределяет общие цели управления.) снова как другие примеры показали, что теперь вы можете создать новый стиль для него, чтобы настроить вещи для каждого элемента, такие как интервалы (это не будет работать, если вы просто попытаетесь нацелиться на ListBoxItem, так как стиль с ключом переопределяет общие цели управления.) Кроме того, так как мы явно Выделив стиль, который отслеживает ListBoxItem, а не помещая его в строку, получайте, как показали другие примеры, теперь вы можете создать новый стиль для него, чтобы настраивать элементы для каждого элемента, такие как интервалы (это не будет работать). если вы просто попытаетесь настроить таргетинг на ListBoxItem, поскольку стиль с ключами переопределяет общие цели управления.)</value>
  </data>
  <data name="MeasureSpeedValue" xml:space="preserve">
    <value> Мб/с</value>
  </data>
  <data name="BackgroundTestBlock" xml:space="preserve">
    <value>Тест скорости в фоне</value>
  </data>
  <data name="MeasurePingValue" xml:space="preserve">
    <value> М/с</value>
  </data>
  <data name="TileDownloadText" xml:space="preserve">
    <value>Загрузка: </value>
  </data>
  <data name="TilePingText" xml:space="preserve">
    <value>Пинг: </value>
  </data>
  <data name="TileUploadText" xml:space="preserve">
    <value>Выгрузка: </value>
  </data>
  <data name="NoresultsTextBlock" xml:space="preserve">
    <value>Нет результатов</value>
  </data>
  <data name="BackgroundTestToggleSwitchOffContent" xml:space="preserve">
    <value>Выключено</value>
  </data>
  <data name="BackgroundTestToggleSwitchOnContent" xml:space="preserve">
    <value>Включено</value>
  </data>
  <data name="MicrosoftResearchBlockText" xml:space="preserve">
    <value>МайкрософтРесерч</value>
  </data>
  <data name="ToastDownloadText" xml:space="preserve">
    <value>Загрузка:</value>
  </data>
  <data name="ToastPingText" xml:space="preserve">
    <value>Пинг:</value>
  </data>
  <data name="ToastUploadText" xml:space="preserve">
    <value>Выгрузка:</value>
  </data>
  <data name="ProgramName" xml:space="preserve">
    <value>Тест Скорости</value>
  </data>
  <data name="ProgramVersion" xml:space="preserve">
    <value>Версия 1.0.0.0</value>
  </data>
</root>